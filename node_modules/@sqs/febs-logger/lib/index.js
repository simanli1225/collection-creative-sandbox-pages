"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setLevel = exports.getLevels = exports.getDefaultLevel = void 0;
const winston_1 = require("winston");
const { printf, combine, label, colorize, splat } = winston_1.format;
const DEFAULT_LEVEL = 'info';
const formatter = () => printf(data => `[${data.label}] ${data.level}: ${data.message}`);
const logger = winston_1.createLogger({
    format: combine(colorize(), label({ label: 'FEBS' }), splat(), formatter()),
    level: DEFAULT_LEVEL,
    levels: winston_1.config.npm.levels,
    transports: [new winston_1.transports.Console()],
});
const getDefaultLevel = () => DEFAULT_LEVEL;
exports.getDefaultLevel = getDefaultLevel;
const getLevels = () => ['silent', ...Object.keys(logger.levels)];
exports.getLevels = getLevels;
const setLevel = (level, injectedLogger = logger) => {
    injectedLogger.level = level;
    injectedLogger.debug(`Set logger level to '${level}'`);
};
exports.setLevel = setLevel;
exports.default = {
    debug: logger.debug.bind(logger),
    error: logger.error.bind(logger),
    info: logger.info.bind(logger),
    log: logger.info.bind(logger),
    silly: logger.silly.bind(logger),
    verbose: logger.verbose.bind(logger),
    warn: logger.warn.bind(logger),
    getDefaultLevel: exports.getDefaultLevel,
    getLevels: exports.getLevels,
    setLevel: exports.setLevel,
};
//# sourceMappingURL=index.js.map