import React from 'react';
import PropTypes from 'prop-types';
import type { PluralFormsType, TranslationOptions } from '../../functions/I18nUI';
import { HTMLAttributesTransformFunction } from './componentUtils';
export interface PluralPropsInternal {
    n: number;
    forms: Record<PluralFormsType, string>;
    formatter: (forms: Record<PluralFormsType, string>, n: number, nonCompProps: Record<string, string>, opts: TranslationOptions) => string;
    project: string;
    notes?: string;
    readonly locale?: string;
    readonly htmlAttributesTransform: HTMLAttributesTransformFunction;
    [k: string]: any;
}
declare const Plural: {
    ({ n, forms, locale, formatter, project, notes, htmlAttributesTransform, ...rest }: PluralPropsInternal): React.JSX.Element | null;
    propTypes: {
        n: PropTypes.Requireable<number>;
        forms: PropTypes.Requireable<PropTypes.InferProps<{
            one: PropTypes.Requireable<string>;
            other: PropTypes.Validator<string>;
            zero: PropTypes.Requireable<string>;
            many: PropTypes.Requireable<string>;
            few: PropTypes.Requireable<string>;
            two: PropTypes.Requireable<string>;
        }>>;
        formatter: PropTypes.Validator<(...args: any[]) => any>;
        project: PropTypes.Validator<string>;
        notes: PropTypes.Requireable<string>;
    };
};
export default Plural;
