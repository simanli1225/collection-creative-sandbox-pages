"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var prop_types_1 = tslib_1.__importDefault(require("prop-types"));
var warning_1 = tslib_1.__importDefault(require("warning"));
var pickBy_1 = tslib_1.__importDefault(require("lodash/pickBy"));
var componentUtils_1 = require("./componentUtils");
var renderComponent_1 = require("./renderComponent");
var Plural = function (_a) {
    var n = _a.n, forms = _a.forms, locale = _a.locale, formatter = _a.formatter, project = _a.project, notes = _a.notes, htmlAttributesTransform = _a.htmlAttributesTransform, rest = tslib_1.__rest(_a, ["n", "forms", "locale", "formatter", "project", "notes", "htmlAttributesTransform"]);
    var compProps = {};
    var nonComponentProps = {};
    var fallbackValue = forms && forms.other ? forms.other : null;
    (0, warning_1.default)(!rest.hasOwnProperty('children'), 'The Plural component does not support children.');
    if (typeof n !== 'number' || !fallbackValue) {
        return null;
    }
    if (typeof fallbackValue !== 'string') {
        return (0, renderComponent_1.renderComponent)(null, fallbackValue);
    }
    Object.keys(rest).forEach(function (propKey) {
        var valueInRest = rest[propKey];
        if (!react_1.default.isValidElement(valueInRest)) {
            nonComponentProps[propKey] = valueInRest;
        }
        else {
            compProps[propKey] = valueInRest;
        }
    });
    var opts = (0, componentUtils_1.propsToOpts)(project, notes);
    var formattedValue = formatter(forms, n, nonComponentProps, opts);
    var parsedStringToArray = (0, componentUtils_1.parseString)(Object.values(forms).join(','));
    var htmlAttributeProps = (0, pickBy_1.default)(nonComponentProps, function (_value, key) {
        return !parsedStringToArray.includes("{".concat(key, "}"));
    });
    var stringSubstitutions = (0, componentUtils_1.shallowDifference)(nonComponentProps, htmlAttributeProps);
    var subsObj = {
        strings: Object.keys(stringSubstitutions),
    };
    if (Object.keys(compProps).length > 0) {
        var _b = (0, componentUtils_1.performComponentSubs)(formattedValue, compProps), children = _b.children, replaced = _b.replaced;
        subsObj.components = replaced;
        htmlAttributeProps = htmlAttributesTransform(formattedValue, subsObj, htmlAttributeProps);
        return (0, renderComponent_1.renderComponentWithChildren)(children, htmlAttributeProps);
    }
    htmlAttributeProps = htmlAttributesTransform(formattedValue, subsObj, htmlAttributeProps);
    return (0, renderComponent_1.renderComponent)(htmlAttributeProps, formattedValue);
};
Plural.propTypes = {
    n: prop_types_1.default.number,
    forms: prop_types_1.default.shape({
        one: prop_types_1.default.string,
        other: prop_types_1.default.string.isRequired,
        zero: prop_types_1.default.string,
        many: prop_types_1.default.string,
        few: prop_types_1.default.string,
        two: prop_types_1.default.string,
    }),
    formatter: prop_types_1.default.func.isRequired,
    project: prop_types_1.default.string.isRequired,
    notes: prop_types_1.default.string,
};
exports.default = Plural;
