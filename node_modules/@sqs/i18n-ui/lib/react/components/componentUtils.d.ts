import React from 'react';
export declare const shallowDifference: (baseObj: Record<string, any>, subsetObj: Record<string, any>) => Record<string, any>;
export declare const parseString: (stringToParse: string | null) => string[];
export type HTMLAttributesTransformFunction = (resolvedValue: string, substitutions?: SubstitutionType, htmlAttributeProps?: Record<string, string>) => Record<string, string>;
export type SubstitutionType = {
    strings?: string[];
    components?: string[];
};
export declare const performComponentSubs: (str: string | null, replacements?: Record<string, any> | null) => {
    children: React.ReactNode[];
    replaced: string[];
};
export declare const propsToOpts: (project: string, notes?: string | null) => {
    project: string;
    notes?: string;
};
