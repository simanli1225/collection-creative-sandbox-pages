"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var i18n_number_parsing_utils_1 = require("@sqs/i18n-number-parsing-utils");
var withDebugMode_1 = tslib_1.__importDefault(require("../functions/helpers/withDebugMode"));
var NumberParser = (function () {
    function NumberParser(i18nInstance) {
        var _this = this;
        this.getNumberSystemMetadata = function (numberSystem) {
            if (numberSystem === void 0) { numberSystem = 'latn'; }
            var bundle = _this.i18nInstance.formattingCldr.General.bundle();
            var system = _this.i18nInstance.formattingCldr.Schema.Numbers.numberSystem.get(numberSystem);
            return {
                symbols: system.symbols.mapping(bundle),
                pattern: system.decimalFormats.standard.get(bundle),
            };
        };
        this.parseNumber = function (value, formatOptions) {
            if (formatOptions === void 0) { formatOptions = {}; }
            var numMetaData = _this.getNumberSystemMetadata();
            var formatProps = (0, i18n_number_parsing_utils_1.numberFormatProperties)(numMetaData.pattern, numMetaData.symbols, formatOptions);
            var parseProps = (0, i18n_number_parsing_utils_1.numberParseProperties)(formatProps);
            var parsedValue = (0, i18n_number_parsing_utils_1.parseNumber)(value, parseProps);
            return _this.i18nInstance.isDebugMode
                ? (0, withDebugMode_1.default)(parsedValue)
                : parsedValue;
        };
        this.i18nInstance = i18nInstance;
    }
    return NumberParser;
}());
exports.default = NumberParser;
