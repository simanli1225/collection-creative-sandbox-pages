"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var config_1 = tslib_1.__importDefault(require("./config"));
var word_1 = tslib_1.__importDefault(require("./word"));
var character_1 = tslib_1.__importDefault(require("./character"));
var memoize_1 = tslib_1.__importDefault(require("lodash/memoize"));
var pseudolocalize = (0, memoize_1.default)(function (string, config) {
    config = Object.assign({}, config_1.default, config);
    var getExpansionFactor = config.getExpansionFactor, skipCharacter = config.skipCharacter, delineator = config.delineator, replaceChar = config.replaceChar;
    var transformedWords = [];
    var expansionFactor = getExpansionFactor(string.split('').filter(function (c) { return !skipCharacter(c); }).length);
    var words = string.split(delineator);
    for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {
        var originalWord = words_1[_i];
        if (!originalWord.length) {
            continue;
        }
        var transformedWord = '';
        for (var _a = 0, originalWord_1 = originalWord; _a < originalWord_1.length; _a++) {
            var character = originalWord_1[_a];
            var transformed = replaceChar(new character_1.default(character));
            if (transformed) {
                transformedWord = transformedWord += transformed;
            }
            else {
                transformedWord = transformedWord += character;
            }
        }
        var expanded = word_1.default.expand({
            originalWord: originalWord,
            transformedWord: transformedWord,
            expansionFactor: expansionFactor,
            skipCharacter: skipCharacter,
        });
        transformedWords = transformedWords.concat(expanded);
    }
    return transformedWords.join(delineator);
});
exports.default = pseudolocalize;
