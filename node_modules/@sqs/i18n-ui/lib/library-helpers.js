"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupLibrary = setupLibrary;
exports.transformJsonStringsToDictionary = transformJsonStringsToDictionary;
function setupLibrary(packageName, translationLoader) {
    var i18nInstance;
    if (!packageName || typeof packageName !== 'string' || packageName === '') {
        throw new Error('[@sqs/i18n-ui] setupLibrary: packageName is required and must be a non-empty string');
    }
    if (!translationLoader || typeof translationLoader !== 'function') {
        throw new Error("[@sqs/i18n-ui] package=".concat(packageName, ", setupLibrary requires a valid translationLoader function to be passed"));
    }
    return {
        setI18nInstance: function (i18nAppInstance, options) {
            if (options === void 0) { options = {}; }
            i18nInstance = i18nAppInstance;
            var onTranslationsLoadError = options.translationsLoadErrorCallback;
            try {
                i18nInstance.loadTranslations(translationLoader, onTranslationsLoadError, packageName);
            }
            catch (e) {
                var errorMessage = e.message;
                throw new Error("[".concat(packageName, "] Unable to load library's translations\n") + errorMessage);
            }
        },
        getI18nInstance: function () {
            if (!i18nInstance) {
                throw new Error("[".concat(packageName, "] An instance of I18nUI has not be initialized.\n") +
                    'Ensure that the consuming application/library is calling "setI18nInstance"');
            }
            return i18nInstance;
        },
    };
}
function transformJsonStringsToDictionary(smartlingJson) {
    return Object.keys(smartlingJson)
        .filter(function (key) { return key !== 'smartling'; })
        .reduce(function (translations, translationKey) {
        var _a;
        translations[translationKey] = (_a = smartlingJson === null || smartlingJson === void 0 ? void 0 : smartlingJson[translationKey]) === null || _a === void 0 ? void 0 : _a.translation;
        return translations;
    }, {});
}
