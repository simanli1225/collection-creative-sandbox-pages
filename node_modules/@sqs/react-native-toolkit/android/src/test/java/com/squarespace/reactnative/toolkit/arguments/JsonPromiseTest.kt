package com.squarespace.reactnative.toolkit.arguments

import com.facebook.react.bridge.Promise
import com.facebook.react.bridge.ReadableMap
import com.google.gson.JsonObject
import com.nhaarman.mockitokotlin2.argumentCaptor
import com.nhaarman.mockitokotlin2.mock
import com.nhaarman.mockitokotlin2.verify
import org.junit.After
import org.junit.Assert.*
import org.junit.Before
import org.junit.Test

class JsonPromiseTest {

  val mockPromise: Promise = mock()

  lateinit var testPromise: Promise

  @Before
  fun setup() {
    ArgumentUtils.allowNativeDataStructures = false

    testPromise = JsonPromise(mockPromise)
  }

  @Test
  fun testJsonElement() {
    val testObject = JsonObject().apply { addProperty("hello", "world") }

    testPromise.resolve(testObject)

    val value = argumentCaptor<Any> {
      verify(mockPromise).resolve(capture())
    }.firstValue as? ReadableMap

    assertNotNull(value)

    assertEquals("world", value!!.getString("hello"))
  }

  @Test
  fun testOtherElement(){
    val testMap = ArgumentUtils.createMap().apply { putString("hello", "world") }

    testPromise.resolve(testMap)

    val value = argumentCaptor<Any> {
      verify(mockPromise).resolve(capture())
    }.firstValue as? ReadableMap

    assertSame(testMap, value)
  }

  @After
  fun teardown() {
    ArgumentUtils.allowNativeDataStructures = true
  }
}
