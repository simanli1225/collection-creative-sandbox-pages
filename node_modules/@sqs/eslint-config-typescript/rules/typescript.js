module.exports = {
  rules: {
    /** We disable this since it overlaps with @typescript-eslint/no-use-before-define */
    'no-use-before-define': 'off',
    /** We disable this since it overlaps with @typescript-eslint/no-shadow */
    'no-shadow': 'off',
    /** We disable this since it overlaps with @typescript-eslint/semi */
    semi: 'off',
    /** We disable this since it overlaps with @typescript-eslint/no-extra-semi */
    'no-extra-semi': 'off',
    /** We disable this since it overlaps with @typescript-eslint/no-unused-expressions */
    'no-unused-expressions': 'off',
    /** We disable this since it overlaps with @typescript-eslint/indent */
    indent: 'off',
    /** We disable this since it overlaps with @typescript-eslint/func-call-spacing */
    'func-call-spacing': 'off',
    /** We disable this since it overlaps with @typescript-eslint/comma-spacing */
    'comma-spacing': 'off',
    /** We disable this since it overlaps with @typescript-eslint/quotes */
    quotes: 'off',
    /** Increase the allowed line length to provide more room for type information */
    'max-len': ['warn', { code: 140, tabWidth: 2, ignoreUrls: true }],
    '@typescript-eslint/indent': [
      'error',
      2,
      {
        ignoreComments: true,
        ImportDeclaration: 'first',
      },
    ],
    '@typescript-eslint/ban-ts-comment': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-extra-semi': ['error'],
    '@typescript-eslint/no-inferrable-types': 'error',
    '@typescript-eslint/no-shadow': 'error',
    '@typescript-eslint/no-unused-expressions': 'error',
    '@typescript-eslint/no-unused-vars': 'off',
    '@typescript-eslint/no-use-before-define': ['error', { functions: false }],
    '@typescript-eslint/no-var-requires': 'off',
    '@typescript-eslint/semi': ['error', 'always'],
    '@typescript-eslint/func-call-spacing': ['error'],
    '@typescript-eslint/comma-spacing': 'warn',
    '@typescript-eslint/quotes': ['error', 'single', 'avoid-escape'],
    '@typescript-eslint/prefer-ts-expect-error': 'error',
  },
};
