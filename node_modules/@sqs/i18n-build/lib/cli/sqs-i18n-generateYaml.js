#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const fs_1 = tslib_1.__importDefault(require("fs"));
const commander_1 = tslib_1.__importDefault(require("commander"));
const generateYaml_1 = require("../modules/generateYaml");
const utils_1 = require("../utils");
let bundle;
let outputDirectory;
let dryRun = false;
commander_1.default
    .name('sqs-i18n generateYaml')
    .usage('<json-file> <output-dir> [options]')
    .arguments('<json-file> <output-dir>')
    .option('--dry-run', 'Run command but do not write results to file')
    .action(function (jsonFile, outputDir, options) {
    (0, utils_1.validatePath)(jsonFile, 'file');
    (0, utils_1.validatePath)(outputDir, 'dir');
    bundle = jsonFile;
    outputDirectory = outputDir;
    dryRun = options.dryRun;
})
    .parse(process.argv);
if (!bundle) {
    throw new Error('Bundle must be set.');
}
if (!outputDirectory) {
    throw new Error('Output directory must be set');
}
const extractionFile = fs_1.default.readFileSync(bundle, 'utf8');
let extractions;
try {
    extractions = JSON.parse(extractionFile).extractions;
}
catch (e) {
    throw new Error(`Error parsing extractions file to JSON!: ${e.message}`);
}
// Remove unused yamls before generation
(0, generateYaml_1.removeUnusedYamls)(Object.keys(extractions), outputDirectory);
(0, generateYaml_1.build)(extractions, outputDirectory, dryRun);
