import * as t from '@babel/types';
type AttributeValue = t.JSXElement | t.JSXFragment | t.StringLiteral | t.JSXExpressionContainer | null;
/**
 * Returns the value of the attrName component
 * attribute if exists, otherwise returns null
 *
 * @param {object} node
 * @return {Node}
 */
export declare function getAttributeValue(node: t.JSXElement, attrName: string): AttributeValue;
/**
 * Determines if <T> component has children that also resolve to strings
 * (JSXText, JSXExpressionContainer, and more. See "resolvesToString")
 *
 * @param {object} node
 * @param {string} [componentName=T]
 * @return {boolean}
 */
export declare function isWrapper(node: t.JSXElement, componentName: string): boolean;
export declare function getJSXIdentifierName(node: t.JSXElement): string;
/**
 * Determines if element is a block
 *
 * @param {JSXElement} node
 * @returns {boolean}
 */
export declare function isBlockTag(node: t.JSXElement): boolean;
/**
 * Don't rewrap a path if it's already wrapped with <T>
 *
 * @param {JSXElement} node
 * @returns {boolean}
 */
export declare function isNotAlreadyWrapped(node: t.JSXElement): boolean;
/**
 * Copies JSX Element
 * @param {JSXElement} node
 * @param {array} children
 * @return {JSXElement}
 */
type JSXChild = t.JSXText | t.JSXExpressionContainer | t.JSXSpreadChild | t.JSXElement | t.JSXFragment;
type Children = Array<JSXChild>;
export declare function copyJSXElement(node: t.JSXElement, children: Children): t.JSXElement;
/**
 * Theoretically, this should blacklist elements that are block level,
 * so we dont end up with: <div><T>asdf <div>stuff</div></T></div> but rather
 * <div><T>asdf </T><div><T>stuff</T></div></div>
 *
 * @param {JSXElement}
 * @return {boolean}
 */
export declare function hasWhitespaceChildren(node: t.JSXElement): boolean;
/**
 * Tests for JSXElement's children within text content
 *
 * @param {JSXElement}
 * @return {boolean}
 */
export declare function hasInlineChildrenWithTextContent(node: t.JSXElement): boolean;
/**
 * Checks if JSXelement tag equal to a name
 *
 * @param {JSXElement} node
 * @param {string} tagName
 * @returns {boolean}
 */
export declare function isEqualElementTagName(node: t.JSXElement, tagName: string): boolean;
export {};
