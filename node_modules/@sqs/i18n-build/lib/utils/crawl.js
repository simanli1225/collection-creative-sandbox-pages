"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = crawl;
const tslib_1 = require("tslib");
const klaw_1 = tslib_1.__importDefault(require("klaw"));
const minimatch_1 = tslib_1.__importDefault(require("minimatch"));
const stream_1 = require("stream");
function crawl(dir, ignorePathGlobs = []) {
    return new Promise((resolve) => {
        const paths = [];
        const excludeDirsFilter = new stream_1.Transform({
            transform(item, _enc, next) {
                if (!item.stats.isDirectory()) {
                    this.push(item);
                }
                next();
            },
            objectMode: true,
        });
        const excludeUserIgnored = new stream_1.Transform({
            transform(item, _enc, next) {
                const ignoreThis = ignorePathGlobs.some((glob) => {
                    return (0, minimatch_1.default)(item.path, glob, { dot: true });
                });
                if (!ignoreThis) {
                    this.push(item);
                }
                next();
            },
            objectMode: true,
        });
        const includeJsFilter = new stream_1.Transform({
            transform(item, _enc, next) {
                if (item.stats.isFile() &&
                    !/\.d\.ts$/.test(item.path) &&
                    /\.(js|jsx|ts|tsx)$/.test(item.path)) {
                    this.push(item);
                }
                next();
            },
            objectMode: true,
        });
        (0, klaw_1.default)(dir)
            .pipe(excludeDirsFilter)
            .pipe(excludeUserIgnored)
            .pipe(includeJsFilter)
            .on('data', (item) => paths.push(item.path))
            .on('end', () => resolve(paths));
    });
}
