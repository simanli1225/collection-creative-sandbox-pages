import { ExtractResultWithPaths } from './extract';
declare function generateYamlHeader(): string[];
declare function escapeValueForYaml(value: string): string;
declare function generateYamlEntry(translationInstance: ExtractResultWithPaths): string[];
declare function generateBundleContent(instances: Record<string, ExtractResultWithPaths>): string;
/**
 * @param {array} the extracted project keys
 * @param {string} the dir where the yaml files exist
 */
export declare function removeUnusedYamls(extractions: string[], yamlDirectory: string): string[];
export type Extractions = Record<string, {
    instances: Record<string, ExtractResultWithPaths>;
}>;
/**
 * Build YAML files, assuming they all validate with yaml-lint
 */
export declare function build(extractions: Extractions, outputDirectory: string, isDryRun?: boolean): Promise<void>;
declare const _default: {
    generateYamlHeader: typeof generateYamlHeader;
    escapeValueForYaml: typeof escapeValueForYaml;
    generateYamlEntry: typeof generateYamlEntry;
    generateBundleContent: typeof generateBundleContent;
    build: typeof build;
    removeUnusedYamls: typeof removeUnusedYamls;
};
export default _default;
