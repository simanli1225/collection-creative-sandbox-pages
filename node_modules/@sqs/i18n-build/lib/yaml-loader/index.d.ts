import { loader } from 'webpack';
/**
 * Loads a yaml file as a json object. You should not often require
 * any options for this to work, and it's likely wrong to do so, even
 * if they exist.
 * @name @sqs/i18n-build/lib/yaml-loader
 * @module @sqs/i18n-build/lib/yaml-loader
 *
 * @example
 *  const { DEFAULT_FULL_SCHEMA } = require('js-yaml');
 *  module.exports = {
 *    module: {
 *      rules: [
 *        {
 *          test: /\.yaml$/,
 *          use: [
 *            {
 *              loader: '@sqs/i18n-build/lib/yaml-loader',
 *              options: {
 *                module: 'es',
 *                json: true,
 *                schema: DEFAULT_FULL_SCHEMA
 *              }
 *            }
 *          ],
 *        }
 *      ]
 *    }
 *  };
 *
 * @property {object} [options={}] config options.
 * @property {string} [options.module="cjs"] Whether to load this as a cjs or es module.
 * @property {string} [options.filename] filepath for logging errors. defaults to the resource path.
 * @property {function} [options.onWarning] callback for warnings.
 * @property {boolean} [options.json=false] compatibility with JSON.parse.
 * @property {yaml.Schema} [options.schema=DEFAULT_SAFE_SCHEMA] Specific yaml schema to apply.
 */
/**
 * @private
 * @function
 * @param {string} input The loaded yaml file
 * @return {string} The module code.
 */
export default function yamlLoader(this: loader.LoaderContext, input: string): string | null;
