"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const febs_utils_1 = require("@sqs/febs-utils");
const build_utils_1 = require("./build-utils");
const constants_1 = require("./constants");
const webpackUtils = __importStar(require("./webpack-utils"));
const webpack_base_config_1 = __importDefault(require("./webpack.base.config"));
const withI18n_1 = __importDefault(require("./withI18n"));
const withImages_1 = __importDefault(require("./withImages"));
const withLess_1 = __importDefault(require("./withLess"));
const withPublic_1 = __importDefault(require("./withPublic"));
const withTypeScript_1 = __importDefault(require("./withTypeScript"));
exports.default = (env = {}, argv = {}) => {
    argv = febs_utils_1.getOptions(argv);
    const config = webpack_base_config_1.default(env, argv);
    const { chooseIf } = webpackUtils.getHelpers(argv.production ? 'production' : 'development');
    const enhancers = [
        withPublic_1.default(argv),
        withLess_1.default({}, argv),
        !!argv.typescript &&
            withTypeScript_1.default({
                pluginOptions: {
                    eslint: argv.eslint || undefined,
                },
            }),
        !!argv.i18n &&
            !!env.locale &&
            withI18n_1.default({
                filenameTemplate: chooseIf(constants_1.FILENAME_TEMPLATE),
                locale: env.locale,
            }, argv),
        withImages_1.default(),
    ].filter(Boolean);
    const enhance = build_utils_1.compose(...enhancers);
    return enhance(config);
};
//# sourceMappingURL=webpack.config.js.map