import { SupportedTranslationLocale } from '@sqs/i18n-locale-list';
export interface IBundle {
    content: string;
    name: string;
}
export interface IYamlBundle {
    messages: {
        [key: string]: any;
    };
    name: string;
}
export interface ICollisions {
    [key: string]: string[];
}
export interface IInvalidValues {
    [key: string]: string;
}
export interface IStrings {
    [key: string]: string;
}
export declare const gatherLocaleYaml: (locale: SupportedTranslationLocale, langPath: string) => IBundle[];
interface MergedTranslation {
    collisions: ICollisions;
    strings: IStrings;
    invalidValues: IInvalidValues;
}
export declare const mergeBundles: (bundles: IYamlBundle[]) => MergedTranslation;
export declare const loadLanguagePack: (locale: SupportedTranslationLocale, langPath: string) => {
    [key: string]: string;
};
export declare const getI18nFilename: (template: string, language: string) => string;
export declare const getLocaleLabel: (locale: SupportedTranslationLocale) => string;
export {};
//# sourceMappingURL=i18n-utils.d.ts.map