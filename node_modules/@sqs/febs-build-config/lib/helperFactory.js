'use strict';
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getHelperFactory = void 0;
const capitalize_1 = __importDefault(require("lodash/capitalize"));
function getChooseIf(env, envValues) {
    return function chooseEnv(options = {}, def) {
        for (const list of Object.values(envValues)) {
            if (list.includes(env)) {
                for (const guess of list) {
                    if (options.hasOwnProperty(guess)) {
                        return options[guess];
                    }
                }
                break;
            }
        }
        return def;
    };
}
const getIf = (checkCondition, validValues) => {
    return (...args) => {
        if (!args.length) {
            return validValues.includes(checkCondition);
        }
        const [ifVal, elseVal] = args;
        return validValues.includes(checkCondition) ? ifVal : elseVal;
    };
};
function getHelperFactory(pickValues) {
    return function getHelpers(env) {
        const returnPayload = {
            chooseIf: getChooseIf(env, pickValues),
        };
        Object.entries(pickValues).forEach(([key, list]) => {
            returnPayload['if' + capitalize_1.default(key)] = getIf(env, list);
        });
        return returnPayload;
    };
}
exports.getHelperFactory = getHelperFactory;
//# sourceMappingURL=helperFactory.js.map