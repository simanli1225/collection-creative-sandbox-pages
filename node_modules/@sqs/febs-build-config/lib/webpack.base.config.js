"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const febs_utils_1 = require("@sqs/febs-utils");
const terser_webpack_plugin_1 = __importDefault(require("terser-webpack-plugin"));
const webpack_1 = __importDefault(require("webpack"));
const NodePolyfillWebpackPlugin = require("node-polyfill-webpack-plugin");
const constants_1 = require("./constants");
const webpackUtils = __importStar(require("./webpack-utils"));
exports.default = (env = {}, argv = {}) => {
    argv = febs_utils_1.getOptions(argv);
    const ifHelper = webpackUtils.getHelpers;
    const { ifDev, ifProd } = ifHelper(argv.production ? 'production' : 'development');
    const { ifTest } = argv.test ? ifHelper('test') : { ifTest: () => false };
    const appPaths = argv.paths || {};
    return {
        devServer: {
            contentBase: appPaths.public,
            open: true,
            port: 1337,
        },
        devtool: ifDev('eval-source-map', false),
        entry: {
            main: appPaths.src,
        },
        mode: ifDev('development', 'production'),
        module: {
            rules: [
                {
                    exclude: /node_modules/,
                    include: appPaths.src,
                    test: /\.(js|jsx|ts|tsx)$/,
                    use: [
                        require.resolve('babel-loader'),
                        require.resolve('source-map-loader'),
                    ],
                },
            ],
        },
        resolve: {
            modules: [appPaths.src, 'node_modules'],
            extensions: ['.mjs', '.js', '.json', '.jsx', '.less'],
            alias: {
                '@sqs/imageloader': path_1.default.join('@sqs/imageloader', 'dist'),
            },
        },
        optimization: {
            minimize: ifProd(),
            minimizer: [
                new terser_webpack_plugin_1.default({
                    parallel: typeof argv.parallel === 'number'
                        ? argv.parallel < 2
                            ? false
                            : argv.parallel
                        : febs_utils_1.getDefaultCPUUtilization(),
                }),
            ],
        },
        output: {
            path: appPaths.dist,
        },
        cache: {
            type: 'filesystem',
            cacheDirectory: path_1.default.join(appPaths.frontendBuildCache, 'cache-loader'),
        },
        plugins: [
            new NodePolyfillWebpackPlugin({
                excludeAliases: ['console']
            }),
            new webpack_1.default.DefinePlugin({
                __BRANCH_NAME__: JSON.stringify(env[constants_1.BRANCH_ENV_KEY]),
                __BUILD_NUMBER__: JSON.stringify(env[constants_1.BUILD_ENV_KEY]),
                __DEV__: JSON.stringify(ifDev()),
                __TEST__: JSON.stringify(ifTest()),
            }),
        ],
    };
};
//# sourceMappingURL=webpack.base.config.js.map