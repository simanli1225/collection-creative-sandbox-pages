const path = require('path');
const fs = require('fs');
const inquirer = require('inquirer');
const { Plop, run } = require('plop');

// Paths specific to this package.
const CLI_LOGIC_DIRECTORY = path.resolve(__dirname, 'logic');

/**
 * Run our chosen plop file
 */
const runPlop = ({ type }) => Plop.launch({
  configPath: path.resolve(CLI_LOGIC_DIRECTORY, `${type}.js`),
}, env => run(env, undefined, true));

/**
 * We have logic for creatable things inside the logic/create
 * directory. Some example things that may be creatable are
 * say, a component, a federated module webapp, a package, etc.
 *
 * For every creatable thing, we output it's name as an option.
 */
const RECIPE_NAMES = fs
  .readdirSync(path.join(CLI_LOGIC_DIRECTORY))
  .filter(fileName => fs.lstatSync(path.join(CLI_LOGIC_DIRECTORY, fileName)).isFile())
  .map(fileName => path.basename(fileName, '.js'));

/**
 * Prompt the user in the terminal what type of thing they
 * would like to create. The selection maps to a file as per
 * the logic/{userSelection}.js
 *
 * Each of these files that they can select from are a valid
 * Plopfile: https://github.com/plopjs/plop so we just configure
 * that path, and run it.
 *
 * If we only have one recipe type, then just run it.
 */
const main = () => {
  if (RECIPE_NAMES.length > 1) {
    inquirer
      .prompt([{
        type: 'list',
        name: 'type',
        message: 'What would you like to create?',
        choices: RECIPE_NAMES,
        default: 0
      }])
      .then(runPlop);
  } else {
    runPlop({ type: RECIPE_NAMES[0] });
  }
};

module.exports = main;