const { resolvesToString } = require('../../utils/string');
const { T_COMPONENT_NAME } = require('../../utils/constants');

module.exports = {
  meta: {
    docs: {
      description: 'Disallow non-string children in translation components',
      category: 'i18n Usage',
      recommended: false,
    },
    schema: [
      {
        type: 'object',
        properties: {
          tComponent: {
            description: 'Identifier for translation component',
            type: 'string',
          },
        },
        additionalProperties: false,
      },
    ],
  },
  create: context => {
    const options = context.options[0] || {};
    const tComponent = options.tComponent || T_COMPONENT_NAME;
    /* eslint-disable-next-line max-len */
    const matcher = `JSXElement[openingElement.name.name="${tComponent}"] > JSXExpressionContainer[expression.type!="Literal"]`;
    return {
      [matcher]: node => {
        if (!resolvesToString(node)) {
          context.report({
            node,
            message:
              'Children of the {{tComponent}} component must be a string literal',
            data: { tComponent },
          });
        }
      },
    };
  },
};