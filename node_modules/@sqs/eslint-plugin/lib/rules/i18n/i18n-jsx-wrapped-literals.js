const t = require('@babel/types');

const { T_COMPONENT_NAME } = require('../../utils/constants');

module.exports = {
  meta: {
    docs: {
      description: 'Disallow unwrapped string literals in react components',
      category: 'i18n Usage',
      recommended: false,
    },
    // fixable: 'code', // Maybe
    schema: [
      {
        type: 'object',
        properties: {
          tComponent: {
            description: 'Identifier for translation component',
            type: 'string',
          },
        },
        additionalProperties: false,
      },
    ],
  },
  create: context => {
    const options = context.options[0] || {};
    const tComponent = options.tComponent || T_COMPONENT_NAME;
    return {
      ':matches(JSXElement > Literal, JSXElement > JSXText, JSXElement > JSXExpressionContainer[expression.type="Literal"])': node => {
        const isNotWrapped = node.parent.openingElement.name.name !== 'T';
        let value = node.value;
        if (t.isJSXExpressionContainer(node)) {
          value = node.expression.value;
        }
        // Strip non-word characters, e.g., -, _, ..
        value = value.replace(/\W|\d/g, '');
        const isNonEmptyString = /\S+/.test(value);
        if (isNonEmptyString && isNotWrapped) {
          context.report({
            node,
            message:
              'String literals in jsx elements should be wrapped with the {{tComponent}} component',
            data: {
              tComponent: tComponent,
            },
          });
        }
      },
    };
  },
};
