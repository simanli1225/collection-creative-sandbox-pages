const { T_COMPONENT_NAME } = require('../../utils/constants');

module.exports = {
  meta: {
    docs: {
      description: 'Disallow nested literals in react components',
      category: 'i18n Usage',
      recommended: false,
    },
    // fixable: 'code', // Maybe
    schema: [
      {
        type: 'object',
        properties: {
          tComponent: {
            description: 'Identifier for translation component',
            type: 'string',
          },
        },
        additionalProperties: false,
      },
    ],
  },
  create: context => {
    const options = context.options[0] || {};
    const tComponent = options.tComponent || T_COMPONENT_NAME;
    const matcher = `JSXElement[openingElement.name.name="${tComponent}"] > JSXElement`;
    return {
      [matcher]: node => {
        // @TODO: though we're allowing a custom t component name,
        // shoudlWrapChildren only understands 'T' for the moment.
        // That will be fixed soon and passed in below.
        context.report({
          node,
          message:
            'No nested JSXElements are permitted within the {{tComponent}} component',
          data: {
            tComponent: tComponent,
          },
        });
      },
    };
  },
};