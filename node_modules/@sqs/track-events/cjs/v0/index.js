"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _base = _interopRequireDefault(require("../base"));
var _cookieCutter = _interopRequireDefault(require("@sqs/cookie-cutter"));
var _querystring = _interopRequireDefault(require("querystring"));
var _network = _interopRequireDefault(require("@sqs/network"));
var _defaultConfig = require("./constants/defaultConfig");
var _excluded = ["websiteId", "memberAccountId", "website_locale", "member_locale", "templateId", "variantId"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2["default"])(o), (0, _possibleConstructorReturn2["default"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2["default"])(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
/**
 * EventsClient V0
 * A simple wrapper for sending events to the v0 Squarespace events pipeline
 */
var EventsClient = exports["default"] = /*#__PURE__*/function (_BaseClient) {
  function EventsClient(config) {
    var _this;
    var defaultPayload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    (0, _classCallCheck2["default"])(this, EventsClient);
    _this = _callSuper(this, EventsClient);
    var defaultConfig = (0, _defaultConfig.getDefaultConfig)();
    _this._config = _objectSpread(_objectSpread({
      expirationKey: undefined,
      storageKey: undefined
    }, defaultConfig), config);
    _this._defaultPayload = defaultPayload;
    return _this;
  }

  /**
   * Generate the event payload
   * @param {Object} event - The object with the event data
   * @returns {Object} - The fully constructed event payload
   */
  (0, _inherits2["default"])(EventsClient, _BaseClient);
  return (0, _createClass2["default"])(EventsClient, [{
    key: "_generatePayload",
    value: function _generatePayload(event) {
      var hash = window.location.hash;
      var mergedDefaultAndEventData = _objectSpread(_objectSpread({}, this._defaultPayload), event);
      var _mergedDefaultAndEven = mergedDefaultAndEventData.websiteId,
        websiteId = _mergedDefaultAndEven === void 0 ? null : _mergedDefaultAndEven,
        _mergedDefaultAndEven2 = mergedDefaultAndEventData.memberAccountId,
        memberAccountId = _mergedDefaultAndEven2 === void 0 ? null : _mergedDefaultAndEven2,
        _mergedDefaultAndEven3 = mergedDefaultAndEventData.website_locale,
        website_locale = _mergedDefaultAndEven3 === void 0 ? null : _mergedDefaultAndEven3,
        _mergedDefaultAndEven4 = mergedDefaultAndEventData.member_locale,
        member_locale = _mergedDefaultAndEven4 === void 0 ? null : _mergedDefaultAndEven4,
        _mergedDefaultAndEven5 = mergedDefaultAndEventData.templateId,
        templateId = _mergedDefaultAndEven5 === void 0 ? null : _mergedDefaultAndEven5,
        _mergedDefaultAndEven6 = mergedDefaultAndEventData.variantId,
        variantId = _mergedDefaultAndEven6 === void 0 ? null : _mergedDefaultAndEven6,
        rest = (0, _objectWithoutProperties2["default"])(mergedDefaultAndEventData, _excluded);
      var payload = _objectSpread(_objectSpread(_objectSpread({}, rest), hash && {
        pageHash: hash
      }), {}, {
        pagePath: this._getNormalizedPathname(),
        websiteId: websiteId,
        templateId: templateId,
        variantId: variantId,
        memberAccountId: memberAccountId,
        member_locale: member_locale,
        website_locale: website_locale
      });

      // log the payload
      if (this._config.logging) {
        this._log({
          payload: _objectSpread({}, payload)
        });
      }
      return payload;
    }

    /**
     * Format an event for analytics and send to their endpoint
     * @param {Object} event - The object with the event data
     * @returns {Promise} - Resolved when request is complete
     */
    // @ts-expect-error
  }, {
    key: "track",
    value: function track(eventName) {
      var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var optionalTopLevelArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      if (this._config.fireEvents === false) {
        return Promise.resolve();
      }
      var payload = this._generatePayload(event);
      return this._sendXhr({
        eventName: eventName,
        payload: payload
      }, optionalTopLevelArgs);
    }

    /**
     * Send an XHR to the analytics endpoint
     * @param {Object} payload - The event payload to send
     * @param {string} url - Optional: The URL to send event to, used for v2 validation endpoint
     * @returns {Promise} - Resolves when the request was completed successfully
     */
  }, {
    key: "_sendXhr",
    value: function _sendXhr(_ref, optionalTopLevelArgs, url) {
      var eventName = _ref.eventName,
        payload = _ref.payload;
      url = url || this._config.url;
      return _network["default"].post(url, _querystring["default"].stringify(_objectSpread(_objectSpread({
        crumb: _cookieCutter["default"].get('crumb'),
        event: eventName
      }, optionalTopLevelArgs), {}, {
        data: JSON.stringify(payload)
      })), {
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      });
    }

    /**
     * Spawn a new tracker that extends the configuration and default payload of originating instance
     * @param {Object} defaults - The additional default payload to be sent by the new tracker
     * @returns {EventsClient} - The newly spawned tracker
     */
  }, {
    key: "spawnTracker",
    value: function spawnTracker() {
      var defaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return new EventsClient(this._config, _objectSpread(_objectSpread({}, this._defaultPayload), defaults));
    }
  }]);
}(_base["default"]);
module.exports = exports.default;