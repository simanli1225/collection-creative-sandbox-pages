package com.squarespace.reactnative.network.client

import com.squarespace.android.api.dynamic.DynamicClient
import javax.inject.Provider

/**
 * Constructs network client based on the current state of the app.
 * Arguments are wrapped in [providers][Provider] as they can be changed at runtime.
 *
 * @param dynamicClient provides a [DynamicClient].
 * Wrapped in a [Provider] to ensure latest is always fetched; The user can log out/in at runtime, causing
 * retained clients to have stale and invalid auth signatures.
 * @param identifier provides a sub domain identifier.
 * Wrapped in a [Provider] to ensure the latest is always fetched; The user can switch sites at runtime, causing
 * any retained identifiers to become stale and invalid.
 */
class NetworkClientFactory(
  private val dynamicClient: Provider<DynamicClient>,
  private val identifier: Provider<String>
) : ClientFactory {

  override fun create(): DynamicClient.IdentifiedRequest {
    // the underlying providers may need to make blocking database calls to fetch the required information
    return dynamicClient.get().withIdentifier(identifier.get())
  }
}
