package com.squarespace.reactnative.network

import okhttp3.MediaType
import okhttp3.MediaType.Companion.toMediaTypeOrNull
import okhttp3.RequestBody
import okio.BufferedSink
import java.nio.charset.Charset

/**
 * Decorates an existing [RequestBody].
 *
 * If the existing body does not use `charset` for it's content type,
 * then this decorator will add the provided [charset] before the http request is formed.
 *
 * This can be used to fix when [okhttp3.FormBody] drops the charset before building the http request.
 * See: https://github.com/square/okhttp/issues/4393
 */
internal class CharsetRequestBody(private val requestBody: RequestBody, private val charset: Charset) : RequestBody() {
  override fun contentType(): MediaType? {
    val contentType = requestBody.contentType() ?: return null

    return contentType.takeUnless { it.charset() == null }
      ?: "$contentType; charset=$charset".toMediaTypeOrNull()
  }

  override fun contentLength() = requestBody.contentLength()

  override fun writeTo(sink: BufferedSink) = requestBody.writeTo(sink)
}
