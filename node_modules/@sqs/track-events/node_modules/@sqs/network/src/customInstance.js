import network from './network';

/**
 * applies the provided interceptor mapping to the provided network instance.
 */
function applyInterceptors (networkInstance, mappedInterceptors) {
  Object.keys(mappedInterceptors).forEach(interceptorType => {
    mappedInterceptors[interceptorType].forEach(({ fulfilledHandler, rejectedHandler }) => {
      if (networkInstance.interceptors[interceptorType]) {
        networkInstance.interceptors[interceptorType].use(fulfilledHandler, rejectedHandler);
      }
    });
  });
  return networkInstance;
}

export default (mappedInterceptors = {}) => applyInterceptors(network.create(), mappedInterceptors);