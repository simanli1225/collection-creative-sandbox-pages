// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TypeScript eslintConfig react.bad.js 1`] = `
Array [
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 4,
    "fix": Object {
      "range": Array [
        61,
        62,
      ],
      "text": "  ",
    },
    "line": 4,
    "message": "Expected indentation of 2 spaces but found 1.",
    "messageId": "wrongIndentation",
    "nodeType": "Keyword",
    "ruleId": "@typescript-eslint/indent",
    "severity": 2,
  },
  Object {
    "column": 21,
    "endColumn": 25,
    "endLine": 4,
    "line": 4,
    "message": "'item' is missing in props validation",
    "messageId": "missingPropType",
    "nodeType": "Identifier",
    "ruleId": "react/prop-types",
    "severity": 1,
  },
  Object {
    "column": 12,
    "endColumn": 11,
    "endLine": 16,
    "fix": Object {
      "range": Array [
        167,
        422,
      ],
      "text": "(
<div className=\\"shopping-list\\" onClick={this.props.onClick}>
      <h1>Shopping List for {this.props.name}</h1>
      <ul>
        <ListItem item=\\"Instagram\\" />
        <ListItem item=\\"WhatsApp\\" />
        <ListItem item=\\"Oculus\\" />
      </ul>
    </div>
)",
    },
    "line": 9,
    "message": "Missing parentheses around multilines JSX",
    "messageId": "missingParens",
    "nodeType": "JSXElement",
    "ruleId": "react/jsx-wrap-multilines",
    "severity": 1,
  },
  Object {
    "column": 12,
    "endColumn": 72,
    "endLine": 9,
    "line": 9,
    "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
    "nodeType": "JSXOpeningElement",
    "ruleId": "jsx-a11y/click-events-have-key-events",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 72,
    "endLine": 9,
    "line": 9,
    "message": "Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.",
    "nodeType": "JSXOpeningElement",
    "ruleId": "jsx-a11y/no-static-element-interactions",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 11,
    "endLine": 16,
    "fix": Object {
      "range": Array [
        412,
        416,
      ],
      "text": "           ",
    },
    "line": 16,
    "message": "Expected closing tag to match indentation of opening.",
    "messageId": "matchIndent",
    "nodeType": "JSXClosingElement",
    "ruleId": "react/jsx-closing-tag-location",
    "severity": 1,
  },
  Object {
    "column": 3,
    "endColumn": 11,
    "endLine": 33,
    "line": 33,
    "message": "Default prop types declarations should be sorted alphabetically",
    "messageId": "propsNotSorted",
    "nodeType": "Property",
    "ruleId": "react/sort-default-props",
    "severity": 1,
  },
]
`;

exports[`TypeScript eslintConfig react.bad.js 2`] = `7`;

exports[`TypeScript eslintConfig react.good.js 1`] = `0`;

exports[`TypeScript eslintConfig react-hooks.bad.js 1`] = `
Array [
  Object {
    "column": 5,
    "endColumn": 14,
    "endLine": 7,
    "line": 7,
    "message": "React Hook \\"useEffect\\" is called conditionally. React Hooks must be called in the exact same order in every component render.",
    "nodeType": "Identifier",
    "ruleId": "react-hooks/rules-of-hooks",
    "severity": 2,
  },
  Object {
    "column": 8,
    "endColumn": 10,
    "endLine": 9,
    "line": 9,
    "message": "React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",
    "nodeType": "ArrayExpression",
    "ruleId": "react-hooks/exhaustive-deps",
    "severity": 1,
    "suggestions": Array [
      Object {
        "desc": "Update the dependencies array to be: [count]",
        "fix": Object {
          "range": Array [
            234,
            236,
          ],
          "text": "[count]",
        },
      },
    ],
  },
]
`;

exports[`TypeScript eslintConfig react-hooks.bad.js 2`] = `2`;

exports[`TypeScript eslintConfig react-hooks.good.js 1`] = `0`;

exports[`TypeScript eslintConfig typescript.bad.ts 1`] = `
Array [
  Object {
    "column": 7,
    "endColumn": 28,
    "endLine": 1,
    "fix": Object {
      "range": Array [
        11,
        19,
      ],
      "text": "",
    },
    "line": 1,
    "message": "Type string trivially inferred from a string literal, remove type annotation.",
    "messageId": "noInferrableType",
    "nodeType": "VariableDeclarator",
    "ruleId": "@typescript-eslint/no-inferrable-types",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 21,
    "endLine": 1,
    "fix": Object {
      "range": Array [
        19,
        20,
      ],
      "text": " = ",
    },
    "line": 1,
    "message": "Operator '=' must be spaced.",
    "messageId": "missingSpace",
    "nodeType": "VariableDeclarator",
    "ruleId": "space-infix-ops",
    "severity": 1,
  },
  Object {
    "column": 21,
    "endColumn": 28,
    "endLine": 1,
    "fix": Object {
      "range": Array [
        20,
        27,
      ],
      "text": "'Hello'",
    },
    "line": 1,
    "message": "Strings must use singlequote.",
    "messageId": "wrongQuotes",
    "nodeType": "Literal",
    "ruleId": "@typescript-eslint/quotes",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 4,
    "fix": Object {
      "range": Array [
        68,
        72,
      ],
      "text": "  ",
    },
    "line": 4,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "@typescript-eslint/indent",
    "severity": 2,
  },
  Object {
    "column": 46,
    "endColumn": 47,
    "endLine": 7,
    "fix": Object {
      "range": Array [
        141,
        142,
      ],
      "text": "* ",
    },
    "line": 7,
    "message": "Operator '*' must be spaced.",
    "messageId": "missingSpace",
    "nodeType": "BinaryExpression",
    "ruleId": "space-infix-ops",
    "severity": 1,
  },
  Object {
    "column": 48,
    "endColumn": 1,
    "endLine": 8,
    "fix": Object {
      "range": Array [
        143,
        143,
      ],
      "text": ";",
    },
    "line": 7,
    "message": "Missing semicolon.",
    "messageId": "missingSemi",
    "nodeType": "VariableDeclaration",
    "ruleId": "@typescript-eslint/semi",
    "severity": 2,
  },
  Object {
    "column": 50,
    "endColumn": 52,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        194,
        196,
      ],
      "text": " ",
    },
    "line": 9,
    "message": "Multiple spaces found before '}, \${'.",
    "messageId": "multipleSpaces",
    "nodeType": "Template",
    "ruleId": "no-multi-spaces",
    "severity": 1,
  },
  Object {
    "column": 57,
    "endColumn": 59,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        201,
        203,
      ],
      "text": " ",
    },
    "line": 9,
    "message": "Multiple spaces found before 'name'.",
    "messageId": "multipleSpaces",
    "nodeType": "Identifier",
    "ruleId": "no-multi-spaces",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 12,
    "fix": Object {
      "range": Array [
        240,
        244,
      ],
      "text": "  ",
    },
    "line": 12,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "@typescript-eslint/indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 13,
    "fix": Object {
      "range": Array [
        275,
        279,
      ],
      "text": "  ",
    },
    "line": 13,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "@typescript-eslint/indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 3,
    "endLine": 14,
    "fix": Object {
      "range": Array [
        313,
        315,
      ],
      "text": "",
    },
    "line": 14,
    "message": "Expected indentation of 0 spaces but found 2.",
    "messageId": "wrongIndentation",
    "nodeType": "Punctuator",
    "ruleId": "@typescript-eslint/indent",
    "severity": 2,
  },
  Object {
    "column": 41,
    "endColumn": 42,
    "endLine": 14,
    "fix": Object {
      "range": Array [
        353,
        353,
      ],
      "text": ";",
    },
    "line": 14,
    "message": "Missing semicolon.",
    "messageId": "missingSemi",
    "nodeType": "ReturnStatement",
    "ruleId": "@typescript-eslint/semi",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 19,
    "fix": Object {
      "range": Array [
        525,
        525,
      ],
      "text": "  ",
    },
    "line": 19,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "@typescript-eslint/indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 23,
    "fix": Object {
      "range": Array [
        646,
        650,
      ],
      "text": "      ",
    },
    "line": 23,
    "message": "Expected indentation of 6 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Keyword",
    "ruleId": "@typescript-eslint/indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 25,
    "fix": Object {
      "range": Array [
        677,
        677,
      ],
      "text": "  ",
    },
    "line": 25,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Punctuator",
    "ruleId": "@typescript-eslint/indent",
    "severity": 2,
  },
  Object {
    "column": 3,
    "fix": Object {
      "range": Array [
        679,
        679,
      ],
      "text": ";",
    },
    "line": 25,
    "message": "Missing semicolon.",
    "messageId": "missingSemi",
    "nodeType": "VariableDeclaration",
    "ruleId": "@typescript-eslint/semi",
    "severity": 2,
  },
]
`;

exports[`TypeScript eslintConfig typescript.bad.ts 2`] = `16`;

exports[`TypeScript eslintConfig typescript.good.ts 1`] = `0`;

exports[`TypeScript eslintConfig vanilla.bad.js 1`] = `
Array [
  Object {
    "column": 5,
    "endColumn": 11,
    "endLine": 1,
    "line": 1,
    "message": "Unexpected constant condition.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-constant-condition",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 6,
    "fix": Object {
      "range": Array [
        36,
        74,
      ],
      "text": "if (true) {
    var cc = 33;
  }",
    },
    "line": 4,
    "message": "Unexpected if as the only statement in an else block.",
    "messageId": "unexpectedLonelyIf",
    "nodeType": "IfStatement",
    "ruleId": "no-lonely-if",
    "severity": 1,
  },
  Object {
    "column": 7,
    "endColumn": 11,
    "endLine": 4,
    "line": 4,
    "message": "Unexpected constant condition.",
    "messageId": "unexpected",
    "nodeType": "Literal",
    "ruleId": "no-constant-condition",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 9,
    "endLine": 8,
    "line": 8,
    "message": "Unexpected constant condition.",
    "messageId": "unexpected",
    "nodeType": "Literal",
    "ruleId": "no-constant-condition",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        85,
        89,
      ],
      "text": "  ",
    },
    "line": 9,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Keyword",
    "ruleId": "@typescript-eslint/indent",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 26,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        89,
        110,
      ],
      "text": "{var c = true?\\"a\\":\\"b\\";}",
    },
    "line": 9,
    "message": "Expected { after 'if' condition.",
    "messageId": "missingCurlyAfterCondition",
    "nodeType": "IfStatement",
    "ruleId": "curly",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 17,
    "endLine": 9,
    "line": 9,
    "message": "Unexpected constant condition.",
    "messageId": "unexpected",
    "nodeType": "Literal",
    "ruleId": "no-constant-condition",
    "severity": 2,
  },
  Object {
    "column": 17,
    "endColumn": 18,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        101,
        102,
      ],
      "text": " ? ",
    },
    "line": 9,
    "message": "Operator '?' must be spaced.",
    "messageId": "missingSpace",
    "nodeType": "ConditionalExpression",
    "ruleId": "space-infix-ops",
    "severity": 1,
  },
  Object {
    "column": 18,
    "endColumn": 21,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        102,
        105,
      ],
      "text": "'a'",
    },
    "line": 9,
    "message": "Strings must use singlequote.",
    "messageId": "wrongQuotes",
    "nodeType": "Literal",
    "ruleId": "@typescript-eslint/quotes",
    "severity": 2,
  },
  Object {
    "column": 21,
    "endColumn": 22,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        105,
        106,
      ],
      "text": " : ",
    },
    "line": 9,
    "message": "Operator ':' must be spaced.",
    "messageId": "missingSpace",
    "nodeType": "ConditionalExpression",
    "ruleId": "space-infix-ops",
    "severity": 1,
  },
  Object {
    "column": 22,
    "endColumn": 25,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        106,
        109,
      ],
      "text": "'b'",
    },
    "line": 9,
    "message": "Strings must use singlequote.",
    "messageId": "wrongQuotes",
    "nodeType": "Literal",
    "ruleId": "@typescript-eslint/quotes",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 22,
    "endLine": 11,
    "line": 11,
    "message": "Expected an assignment or function call and instead saw an expression.",
    "messageId": "unusedExpression",
    "nodeType": "ExpressionStatement",
    "ruleId": "@typescript-eslint/no-unused-expressions",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 8,
    "endLine": 11,
    "fix": Object {
      "range": Array [
        112,
        119,
      ],
      "text": "'mixed'",
    },
    "line": 11,
    "message": "Strings must use singlequote.",
    "messageId": "wrongQuotes",
    "nodeType": "Literal",
    "ruleId": "@typescript-eslint/quotes",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 14,
    "fix": Object {
      "range": Array [
        144,
        149,
      ],
      "text": ",
   ",
    },
    "line": 14,
    "message": "',' should be placed last.",
    "messageId": "expectedCommaLast",
    "nodeType": "VariableDeclarator",
    "ruleId": "comma-style",
    "severity": 2,
  },
  Object {
    "column": 17,
    "endColumn": 23,
    "endLine": 23,
    "line": 23,
    "message": "Unexpected constant condition.",
    "messageId": "unexpected",
    "nodeType": "Literal",
    "ruleId": "no-constant-condition",
    "severity": 2,
  },
  Object {
    "column": 17,
    "endColumn": 23,
    "endLine": 23,
    "fix": Object {
      "range": Array [
        237,
        243,
      ],
      "text": "'rick'",
    },
    "line": 23,
    "message": "Strings must use singlequote.",
    "messageId": "wrongQuotes",
    "nodeType": "Literal",
    "ruleId": "@typescript-eslint/quotes",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 24,
    "fix": Object {
      "range": Array [
        243,
        248,
      ],
      "text": " ?
  ",
    },
    "line": 24,
    "message": "'?' should be placed at the end of the line.",
    "messageId": "operatorAtEnd",
    "nodeType": "ConditionalExpression",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 14,
    "endLine": 24,
    "fix": Object {
      "range": Array [
        248,
        257,
      ],
      "text": "'why you'",
    },
    "line": 24,
    "message": "Strings must use singlequote.",
    "messageId": "wrongQuotes",
    "nodeType": "Literal",
    "ruleId": "@typescript-eslint/quotes",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 25,
    "fix": Object {
      "range": Array [
        257,
        262,
      ],
      "text": " :
  ",
    },
    "line": 25,
    "message": "':' should be placed at the end of the line.",
    "messageId": "operatorAtEnd",
    "nodeType": "ConditionalExpression",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 19,
    "endLine": 25,
    "fix": Object {
      "range": Array [
        262,
        276,
      ],
      "text": "'ruin my lyfe'",
    },
    "line": 25,
    "message": "Strings must use singlequote.",
    "messageId": "wrongQuotes",
    "nodeType": "Literal",
    "ruleId": "@typescript-eslint/quotes",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 31,
    "endLine": 28,
    "line": 28,
    "message": "Unexpected use of 'length'. Use window.length instead.",
    "messageId": "customMessage",
    "nodeType": "Identifier",
    "ruleId": "no-restricted-globals",
    "severity": 1,
  },
]
`;

exports[`TypeScript eslintConfig vanilla.bad.js 2`] = `21`;

exports[`TypeScript eslintConfig vanilla.good.js 1`] = `0`;
