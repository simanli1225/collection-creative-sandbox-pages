"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selectors = exports.reducer = exports.initialState = exports.actions = void 0;
require("core-js/modules/es.array.find-index.js");
require("core-js/modules/es.array.splice.js");
var _toolkit = require("@reduxjs/toolkit");
var _bootstrap = require("./bootstrap");
var initialState = exports.initialState = null;
var slice = (0, _toolkit.createSlice)({
  name: 'billingStatuses',
  initialState: initialState,
  reducers: {
    update(_, action) {
      return action.payload;
    },
    upsertTemporaryBillingStatus(billingStatuses, action) {
      if (billingStatuses === null) {
        return;
      }
      var indexOfExistingStatus = billingStatuses.findIndex(s => s.productType === action.payload.productType);
      if (indexOfExistingStatus !== -1) {
        billingStatuses.splice(indexOfExistingStatus, 1, action.payload);
      } else {
        billingStatuses.push(action.payload);
      }
    }
  },
  extraReducers: builder => {
    builder.addCase(_bootstrap.actions.hardBootstrap, (_, action) => action.payload.billingStatuses);
    builder.addCase(_bootstrap.actions.softBootstrap, (state, action) => state || action.payload.billingStatuses);
  }
});
var reducer = exports.reducer = slice.reducer;
var actions = exports.actions = {
  updateBillingStatuses: slice.actions.update,
  upsertTemporaryBillingStatus: slice.actions.upsertTemporaryBillingStatus
};
var selectBillingStatuses = _ref => {
  var billingStatuses = _ref.billingStatuses;
  return billingStatuses;
};
var selectors = exports.selectors = {
  selectBillingStatuses
};