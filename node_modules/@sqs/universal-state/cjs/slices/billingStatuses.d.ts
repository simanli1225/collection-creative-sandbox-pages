import type { ProductBillingStatusAPIModel } from '../types/ProductBillingStatus';
import type { State as RootState } from '../state';
export type State = ProductBillingStatusAPIModel[] | null;
export declare const initialState: State;
export declare const reducer: import("redux").Reducer<ProductBillingStatusAPIModel[] | null>;
export declare const actions: {
    updateBillingStatuses: import("@reduxjs/toolkit").ActionCreatorWithPayload<ProductBillingStatusAPIModel[], "billingStatuses/update">;
    upsertTemporaryBillingStatus: import("@reduxjs/toolkit").ActionCreatorWithPayload<ProductBillingStatusAPIModel, "billingStatuses/upsertTemporaryBillingStatus">;
};
export type Action = ReturnType<typeof actions.updateBillingStatuses> | ReturnType<typeof actions.upsertTemporaryBillingStatus>;
export declare const selectors: {
    selectBillingStatuses: ({ billingStatuses }: RootState) => ProductBillingStatusAPIModel[] | null;
};
//# sourceMappingURL=billingStatuses.d.ts.map