import { Action } from 'redux';
import { UniversalStateEvent } from './protocol';
import { Store } from './storeTypes';
export default class FakeStore<S, A extends Action> implements Store<S, A> {
    private rootWindow;
    private state;
    private hasReceivedState;
    private pendingActions;
    private listeners;
    constructor(rootWindow: Window, preloadedState: S);
    handleEvent: (event: UniversalStateEvent<S, A>) => void;
    private update;
    private flushPendingActions;
    getState(): S;
    dispatch(action: A): void;
    private actuallyDispatch;
    subscribe(listener: () => void): () => void;
}
//# sourceMappingURL=FakeStore.d.ts.map