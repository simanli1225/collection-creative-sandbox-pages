/// <reference types="react" />
export * from './types';
export * as actions from './actions';
export * as selectors from './selectors';
declare const store: import("./types").Store;
export declare const Provider: import("react").ComponentType<import("./transport").ProviderProps>, Consumer: import("react").ComponentType<import("react").ConsumerProps<import("./transport").ContextValue<import("./state").State, import("./actions").Action>>>, FrameBridge: import("react").ComponentType<import("./transport").FrameBridgeProps>, useSelector: <T>(selector: (state: import("./state").State) => T) => T, useDispatch: () => import("./transport").Dispatch<import("./actions").Action>, connect: import("./transport/storeTypes").ConnectFunction<import("./state").State, import("./actions").Action>;
export { store };
declare const _default: {
    Provider: import("react").ComponentType<import("./transport").ProviderProps>;
    Consumer: import("react").ComponentType<import("react").ConsumerProps<import("./transport").ContextValue<import("./state").State, import("./actions").Action>>>;
    FrameBridge: import("react").ComponentType<import("./transport").FrameBridgeProps>;
    useSelector: <T>(selector: (state: import("./state").State) => T) => T;
    useDispatch: () => import("./transport").Dispatch<import("./actions").Action>;
    connect: import("./transport/storeTypes").ConnectFunction<import("./state").State, import("./actions").Action>;
    store: import("./types").Store;
};
export default _default;
//# sourceMappingURL=index.d.ts.map