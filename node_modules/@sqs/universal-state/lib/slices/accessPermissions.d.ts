import AccessPermissions from '@sqs/enums/AccessPermissions';
import type { State as RootState } from '../state';
export type State = AccessPermissions[] | null;
export declare const initialState: State;
export declare const reducer: import("redux").Reducer<AccessPermissions[] | null>;
export declare const actions: {
    updateAccessPermissions: import("@reduxjs/toolkit").ActionCreatorWithPayload<AccessPermissions[] | null, "accessPermissions/update">;
};
export type Action = ReturnType<typeof actions.updateAccessPermissions>;
export type AccessPermissionSpecifier = AccessPermissions | keyof typeof AccessPermissions;
export type AccessPermissionsSelector = (rootState: RootState) => boolean;
declare function selectHasPermission(permission: AccessPermissionSpecifier): AccessPermissionsSelector;
declare function selectHasAllPermissions(permissions: AccessPermissionSpecifier[]): AccessPermissionsSelector;
declare function selectHasAnyPermission(permissions: AccessPermissionSpecifier[]): AccessPermissionsSelector;
export declare const selectors: {
    selectHasPermission: typeof selectHasPermission;
    selectHasAllPermissions: typeof selectHasAllPermissions;
    selectHasAnyPermission: typeof selectHasAnyPermission;
    selectIsAdmin: AccessPermissionsSelector;
};
export {};
//# sourceMappingURL=accessPermissions.d.ts.map