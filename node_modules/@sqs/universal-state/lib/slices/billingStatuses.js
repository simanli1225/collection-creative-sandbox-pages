import "core-js/modules/es.array.find-index.js";
import "core-js/modules/es.array.splice.js";
import { createSlice } from '@reduxjs/toolkit';
import { actions as bootstrapActions } from './bootstrap';
export var initialState = null;
var slice = createSlice({
  name: 'billingStatuses',
  initialState: initialState,
  reducers: {
    update(_, action) {
      return action.payload;
    },
    upsertTemporaryBillingStatus(billingStatuses, action) {
      if (billingStatuses === null) {
        return;
      }
      var indexOfExistingStatus = billingStatuses.findIndex(s => s.productType === action.payload.productType);
      if (indexOfExistingStatus !== -1) {
        billingStatuses.splice(indexOfExistingStatus, 1, action.payload);
      } else {
        billingStatuses.push(action.payload);
      }
    }
  },
  extraReducers: builder => {
    builder.addCase(bootstrapActions.hardBootstrap, (_, action) => action.payload.billingStatuses);
    builder.addCase(bootstrapActions.softBootstrap, (state, action) => state || action.payload.billingStatuses);
  }
});
export var reducer = slice.reducer;
export var actions = {
  updateBillingStatuses: slice.actions.update,
  upsertTemporaryBillingStatus: slice.actions.upsertTemporaryBillingStatus
};
var selectBillingStatuses = _ref => {
  var billingStatuses = _ref.billingStatuses;
  return billingStatuses;
};
export var selectors = {
  selectBillingStatuses
};