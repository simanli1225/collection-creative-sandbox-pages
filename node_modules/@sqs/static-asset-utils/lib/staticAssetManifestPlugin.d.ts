import { Compiler } from 'webpack';
interface CustomAssets {
    nonWebpackContent: string[];
    projectRoot?: string;
    assetsRoot?: string;
}
export interface StaticAssetManifestPluginOptions {
    debug?: boolean;
    locale?: string;
    outputFilePrefix?: string;
    projectName: string;
    customAssets?: CustomAssets;
}
interface AssetPaths {
    localPath: string;
    remotePath: string;
}
export declare function formatLog(messages: any[]): string;
interface AssetParserOptions {
    outputPath: string;
    projectName: string;
    locale?: string;
}
export declare function generateAssetParser({ outputPath, projectName, locale, }: AssetParserOptions): AssetParser;
declare type AssetParser = (filename: string, chunkname: string) => {
    key: string;
    paths: AssetPaths;
};
export default class StaticAssetManifestPlugin {
    private static defaults;
    private readonly options;
    private readonly writer;
    private logger;
    private log;
    constructor(options: StaticAssetManifestPluginOptions);
    apply(compiler: Compiler): void;
}
export {};
//# sourceMappingURL=staticAssetManifestPlugin.d.ts.map