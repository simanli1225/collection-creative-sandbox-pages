"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateStaticAssetPaths = void 0;
const glob_stream_1 = __importDefault(require("glob-stream"));
const path_1 = __importDefault(require("path"));
const through2_1 = __importDefault(require("through2"));
const utils_1 = require("./utils");
function generateStaticAssetPaths(config) {
    let parsedConfig;
    try {
        parsedConfig = utils_1.parseManifestConfig(config);
    }
    catch (error) {
        return Promise.reject(error);
    }
    const { assetsRoot, files, globBase, manifestKeyTransformFn, projectName, projectRoot, } = parsedConfig;
    const fileStream = glob_stream_1.default(files, {
        base: globBase,
        cwd: projectRoot,
        nodir: true,
    });
    const assetsMap = {};
    return new Promise((resolve, reject) => {
        const write = (file, encoding, cb) => {
            try {
                const localPath = path_1.default.relative(file.cwd, file.path);
                const relativePath = path_1.default.relative(file.base, file.path);
                const outputPath = path_1.default.relative(assetsRoot, file.path);
                const key = manifestKeyTransformFn(relativePath);
                const remotePath = path_1.default.join('/', projectName, outputPath);
                if (assetsMap.hasOwnProperty(key)) {
                    throw new Error(`Failed to generate manifest. Key "${key}" must be unique.`);
                }
                assetsMap[key] = {
                    localPath,
                    remotePath,
                };
            }
            catch (error) {
                reject(error);
            }
            cb();
        };
        const end = (cb) => {
            resolve(assetsMap);
            cb();
        };
        fileStream.pipe(through2_1.default.obj(write, end));
    });
}
exports.generateStaticAssetPaths = generateStaticAssetPaths;
//# sourceMappingURL=generateStaticAssetPaths.js.map