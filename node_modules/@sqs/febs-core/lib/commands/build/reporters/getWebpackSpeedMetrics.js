"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const febs_logger_1 = __importDefault(require("@sqs/febs-logger"));
const i18n_locale_list_1 = require("@sqs/i18n-locale-list");
const path_1 = __importDefault(require("path"));
const utils_1 = require("./utils");
const getLoaderName = (loader) => {
    if (loader === '@sqs') {
        return '@sqs/l10n-loader';
    }
    else if (path_1.default.isAbsolute(loader)) {
        return path_1.default.basename(loader, '.js');
    }
    return loader;
};
const formatLoadersKey = (loaders) => loaders
    .map(getLoaderName)
    .join('+')
    .trim()
    .replace(/\//g, '-')
    .replace(/\b\s+\b/g, '_');
const formatSMPLoaders = ({ build }) => build
    .map(({ loaders, activeTime }) => ({
    [formatLoadersKey(loaders)]: activeTime,
}))
    .reduce((prev, next) => (Object.assign(Object.assign({}, next), prev)), {});
const formatSMPJSON = ({ plugins, loaders, }) => {
    return {
        loaders: formatSMPLoaders(loaders),
        plugins,
    };
};
async function getWebpackSpeedMetrics(config) {
    let metrics = {};
    if (config.locale.includes(i18n_locale_list_1.locales.defaultLocale)) {
        const statsPath = `${config.paths.dist}/webpack-speed-stats.json`;
        const json = await utils_1.readJsonFileAsync(statsPath);
        metrics = formatSMPJSON(json);
    }
    else {
        febs_logger_1.default.debug('Webpack speed metrics are not collected during a non-default locale build');
    }
    return metrics;
}
exports.default = getWebpackSpeedMetrics;
//# sourceMappingURL=getWebpackSpeedMetrics.js.map