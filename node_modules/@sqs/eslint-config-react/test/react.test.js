const path = require('path');
const { lintFixtures } = require('@sqs/eslint-config-core/utils/testUtils');

describe('eslintConfig', function () {
  const rootPath = path.join(__dirname, '__fixtures__');
  const newConfig = Object.assign(require('../index.js'));
  const fixtures = lintFixtures(newConfig, rootPath);

  fixtures.forEach(({ fileName, result }) => {
    // eslint-disable-next-line jest/valid-title
    test(fileName, async () => {
      const awaitedResponse = await result;
      // console.log(awaitedResponse[0])
      // console.log('1:', awaitedResponse[0].errorCount, awaitedResponse[0].warningCount)
      const numOfErrors =
        awaitedResponse[0].errorCount + awaitedResponse[0].warningCount;
      const isGoodConfig = fileName.indexOf('.bad.') === -1;
      const shouldReportErrors = isGoodConfig && numOfErrors > 0;
      if (shouldReportErrors) {
        awaitedResponse[0].messages.forEach(({ message }) => {
          console.log('message: ', message);
        });
      }

      if (!isGoodConfig) {
        // eslint-disable-next-line jest/no-conditional-expect
        expect(numOfErrors).toBeGreaterThan(0);
      } else {
        // eslint-disable-next-line jest/no-conditional-expect
        expect(numOfErrors).toEqual(0);
      }
      expect(numOfErrors).toMatchSnapshot();
    });
  });
});
