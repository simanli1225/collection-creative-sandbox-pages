import type CommentSortTypes from '@sqs/enums/CommentSortTypes';
import type SSBadgeDevices from '@sqs/enums/SSBadgeDevices';
import type SSBadgePosition from '@sqs/enums/SSBadgePosition';
import type SSBadgeType from '@sqs/enums/SSBadgeType';
import type SSBadgeVisibility from '@sqs/enums/SSBadgeVisibility';
export interface WebsiteSettings {
    readonly id: string;
    readonly websiteId: string;
    readonly type: string;
    readonly subjects: unknown[];
    readonly country: string;
    readonly state: string;
    readonly simpleLikingEnabled: boolean;
    readonly mobileInfoBarSettings: unknown;
    readonly announcementBarSettings: unknown;
    readonly popupOverlaySettings: unknown;
    readonly commentLikesAllowed: boolean;
    readonly commentAnonAllowed: boolean;
    readonly commentThreaded: boolean;
    readonly commentApprovalRequired: boolean;
    readonly commentAvatarsOn: boolean;
    readonly commentSortType: CommentSortTypes;
    readonly commentFlagThreshold: number;
    readonly commentFlagsAllowed: boolean;
    readonly commentEnableByDefault: boolean;
    readonly commentsEnabled: boolean;
    readonly commentDisableAfterDaysDefault: number;
    readonly disqusShortname: string;
    readonly contactPhoneNumber: string;
    readonly contactEmail: string;
    readonly storeSettings: unknown;
    readonly useEscapeKeyToLogin: boolean;
    readonly ssBadgeType: SSBadgeType;
    readonly ssBadgePosition: SSBadgePosition;
    readonly ssBadgeVisibility: SSBadgeVisibility;
    readonly ssBadgeDevices: SSBadgeDevices;
    readonly pinterestOverlayOptions: unknown;
    readonly ampEnabled: boolean;
}
//# sourceMappingURL=WebsiteSettings.d.ts.map