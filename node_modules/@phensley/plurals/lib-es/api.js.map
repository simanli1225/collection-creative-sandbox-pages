{"version":3,"file":"api.js","sourceRoot":"","sources":["../src/api.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC3E,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAChD,OAAO,EAAe,eAAe,EAAE,MAAM,SAAS,CAAC;AAGvD,IAAM,OAAO,GAAG,UAAC,CAAU,EAAE,QAAgB,EAAE,MAAe;IAC5D,OAAA,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,UAAG,QAAQ,cAAI,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI;AAA1E,CAA0E,CAAC;AAE7E;;;;GAIG;AACH;IAAA;IAUA,CAAC;IATC;;OAEG;IACH,qBAAG,GAAH,UAAI,QAAgB,EAAE,MAAe;QACnC,IAAM,SAAS,GAAG,OAAO,CAAC,aAAa,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC3D,IAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzD,IAAM,MAAM,GAAG,YAAY,CAAC,QAAQ,CAAC,IAAI,YAAY,CAAC,EAAE,CAAC;QACzD,OAAO,IAAI,eAAe,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IACvE,CAAC;IACH,cAAC;AAAD,CAAC,AAVD,IAUC;;AAED;;;;GAIG;AACH,MAAM,CAAC,IAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC","sourcesContent":["import { cardinalRules, expressions, ordinalRules } from './autogen.rules';\nimport { pluralRanges } from './autogen.ranges';\nimport { PluralRules, PluralRulesImpl } from './rules';\nimport { Rule, RuleMap } from './types';\n\nconst resolve = (r: RuleMap, language: string, region?: string): Rule[] =>\n  (region ? r[`${language}-${region}`] : undefined) || r[language] || r.root;\n\n/**\n * Global instance for fetching plural rules by language and region.\n *\n * @public\n */\nexport class Plurals {\n  /**\n   * Get the plural rules for a given language and optional region.\n   */\n  get(language: string, region?: string): PluralRules {\n    const cardinals = resolve(cardinalRules, language, region);\n    const ordinals = resolve(ordinalRules, language, region);\n    const ranges = pluralRanges[language] || pluralRanges.en;\n    return new PluralRulesImpl(expressions, cardinals, ordinals, ranges);\n  }\n}\n\n/**\n * Global instance for fetching plural rules by language and region.\n *\n * @public\n */\nexport const pluralRules = new Plurals();\n"]}