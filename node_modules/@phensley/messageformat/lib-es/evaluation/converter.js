import { Decimal, DecimalConstants } from '@phensley/decimal';
/**
 * Converts arguments to string or Decimal.
 *
 * @public
 */
var DefaultMessageArgConverter = /** @class */ (function () {
    function DefaultMessageArgConverter() {
    }
    /**
     * Convert to a string if possible.
     */
    DefaultMessageArgConverter.prototype.asString = function (arg) {
        switch (typeof arg) {
            case 'string':
                return arg;
            case 'number':
            case 'boolean':
                return arg.toString();
            case 'object':
                if (arg instanceof Decimal) {
                    return arg.toString();
                }
                break;
        }
        return '';
    };
    /**
     * Convert to a Decimal if possible, or zero.
     */
    DefaultMessageArgConverter.prototype.asDecimal = function (arg) {
        switch (typeof arg) {
            case 'string':
                try {
                    return new Decimal(arg);
                }
                catch (e) {
                    return DecimalConstants.NAN;
                }
            case 'number':
                return new Decimal(arg);
            case 'boolean':
                return arg ? DecimalConstants.ONE : DecimalConstants.ZERO;
            case 'object':
                if (arg instanceof Decimal) {
                    return arg;
                }
                break;
        }
        return DecimalConstants.NAN;
    };
    return DefaultMessageArgConverter;
}());
export { DefaultMessageArgConverter };
//# sourceMappingURL=converter.js.map