import { PluralRules } from '@phensley/plurals';
import { MessageArg, MessageNamedArgs } from './args';
import { MessageArgConverter } from './converter';
import { MessageCode } from '../parser';
/**
 * User-defined message formatter function.
 *
 * @public
 */
export type MessageFormatFunc = (args: MessageArg[], options: string[]) => string;
/**
 * A map of user-defined formatter names to their implementations.
 *
 * @public
 */
export type MessageFormatFuncMap = {
    [name: string]: MessageFormatFunc;
};
/**
 * Evaluates a message format against a set of arguments, producing a string.
 *
 * @public
 */
export declare class MessageEngine {
    private plurals;
    private converter;
    private formatters;
    private code;
    private buf;
    constructor(plurals: PluralRules, converter: MessageArgConverter, formatters: MessageFormatFuncMap, code: MessageCode);
    /**
     * Evaluate the message code against the given arguments.
     */
    evaluate(positional: MessageArg[], named?: MessageNamedArgs): string;
    private _evaluate;
}
