/**
 * A single part of a multi-part value.
 *
 * @public
 */
export interface Part {
    type: string;
    value: string;
}
/**
 * Formatting of decimal values.
 *
 * @public
 */
export interface DecimalFormatter<T> {
    /**
     * Add a new part to the formatted value.
     */
    add(c: string): void;
    /**
     * Finalize and return the formatted value.
     */
    render(): T;
}
/**
 * Formats a decimal into a string.
 *
 * @public
 */
export declare class StringDecimalFormatter implements DecimalFormatter<string> {
    protected parts: string[];
    add(c: string): void;
    render(): string;
}
/**
 * Formats a decimal into an array of parts.
 *
 * @public
 */
export declare class PartsDecimalFormatter implements DecimalFormatter<Part[]> {
    protected decimal: string;
    protected group: string;
    protected parts: Part[];
    protected curr: string[];
    constructor(decimal: string, group: string);
    add(c: string): void;
    render(): Part[];
    private current;
}
