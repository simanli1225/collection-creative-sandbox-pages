/**
 * Formats a decimal into a string.
 *
 * @public
 */
var StringDecimalFormatter = /** @class */ (function () {
    function StringDecimalFormatter() {
        this.parts = [];
    }
    StringDecimalFormatter.prototype.add = function (c) {
        this.parts.push(c);
    };
    StringDecimalFormatter.prototype.render = function () {
        return this.parts.reverse().join('');
    };
    return StringDecimalFormatter;
}());
export { StringDecimalFormatter };
/**
 * Formats a decimal into an array of parts.
 *
 * @public
 */
var PartsDecimalFormatter = /** @class */ (function () {
    function PartsDecimalFormatter(decimal, group) {
        this.decimal = decimal;
        this.group = group;
        this.parts = [];
        this.curr = [];
    }
    PartsDecimalFormatter.prototype.add = function (c) {
        switch (c) {
            case this.decimal:
                this.parts.push({ type: 'fraction', value: this.curr.reverse().join('') });
                this.parts.push({ type: 'decimal', value: c });
                this.curr = [];
                break;
            case this.group:
                this.parts.push({ type: 'integer', value: this.current() });
                this.parts.push({ type: 'group', value: c });
                this.curr = [];
                break;
            default:
                this.curr.push(c);
                break;
        }
    };
    PartsDecimalFormatter.prototype.render = function () {
        if (this.curr.length > 0) {
            this.parts.push({ type: 'integer', value: this.current() });
        }
        return this.parts.reverse();
    };
    PartsDecimalFormatter.prototype.current = function () {
        return this.curr.reverse().join('');
    };
    return PartsDecimalFormatter;
}());
export { PartsDecimalFormatter };
//# sourceMappingURL=format.js.map