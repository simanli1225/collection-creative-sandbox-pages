import { DivMod } from './math';
import { POWERS10 } from './types';
var cmp = function (a, b) { return (a < b ? -1 : a === b ? 0 : 1); };
export var compare = function (a, b, shift) {
    var _a, _b;
    var div = new DivMod();
    var n = a.length;
    var m = b.length;
    var _c = div.word(shift, 7 /* Constants.RDIGITS */), q = _c[0], r = _c[1];
    if (r === 0) {
        while (--m >= 0) {
            var c = cmp(a[m + q], b[m]);
            if (c !== 0) {
                return c;
            }
        }
    }
    else {
        var ph = POWERS10[r];
        var c = 0;
        var hi = 0;
        var loprev = 0;
        var lo = 0;
        --m;
        --n;
        _a = div.pow10(b[m--], 7 /* Constants.RDIGITS */ - r), hi = _a[0], loprev = _a[1];
        if (hi !== 0) {
            c = cmp(a[n], hi);
            if (c !== 0) {
                return c;
            }
            --n;
        }
        var x = 0;
        for (; m >= 0; m--, n--) {
            _b = div.pow10(b[m], 7 /* Constants.RDIGITS */ - r), hi = _b[0], lo = _b[1];
            x = ph * loprev + hi;
            c = cmp(a[n], x);
            if (c !== 0) {
                return c;
            }
            loprev = lo;
        }
        x = ph * loprev;
        c = cmp(a[q], x);
        if (c !== 0) {
            return c;
        }
    }
    return Number(!allzero(a, q));
};
export var allzero = function (data, len) {
    if (len <= data.length) {
        while (--len >= 0) {
            if (data[len] !== 0) {
                return 0;
            }
        }
    }
    return 1;
};
/**
 * Returns the number of digits in w, where w < RADIX.
 */
export var digitCount = function (w) {
    if (w < 10000 /* Constants.P4 */) {
        if (w < 100 /* Constants.P2 */) {
            return w < 10 /* Constants.P1 */ ? 1 : 2;
        }
        return w < 1000 /* Constants.P3 */ ? 3 : 4;
    }
    if (w < 1000000 /* Constants.P6 */) {
        return w < 100000 /* Constants.P5 */ ? 5 : 6;
    }
    return w < 10000000 /* Constants.P7 */ ? 7 : 8;
};
//# sourceMappingURL=operations.js.map