{"version":3,"file":"search.js","sourceRoot":"","sources":["../src/search.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AACH,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,KAAe,EAAE,QAAiB,EAAE,CAAS;IACxE,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,IAAI,EAAE,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1B,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,OAAO,EAAE,IAAI,EAAE,EAAE,CAAC;QAChB,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5B,IAAM,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACnC,KAAK,CAAC,CAAC;gBACL,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;gBACb,MAAM;YACR,KAAK,CAAC;gBACJ,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;gBACb,MAAM;YACR;gBACE,QAAQ;gBACR,OAAO,GAAG,CAAC;QACf,CAAC;IACH,CAAC;IACD,4DAA4D;IAC5D,oCAAoC;IACpC,OAAO,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAChC,CAAC,CAAC","sourcesContent":["/**\n * Binary search an array of numbers. The `lessThan` parameter determines which index\n * is returned:\n *\n *    true  - index of element less-than-or-equal to our search\n *    false -               .. greater-than-or-equal ..\n *\n * @public\n */\nexport const binarySearch = (elems: number[], lessThan: boolean, n: number): number => {\n  let lo = 0;\n  let hi = elems.length - 1;\n  let mid = 0;\n  while (lo <= hi) {\n    mid = lo + ((hi - lo) >> 1);\n    const e = elems[mid];\n    switch (e > n ? 1 : e < n ? -1 : 0) {\n      case -1:\n        lo = mid + 1;\n        break;\n      case 1:\n        hi = mid - 1;\n        break;\n      default:\n        // found\n        return mid;\n    }\n  }\n  // when not found, return the index of the element less than\n  // or greater than the desired value\n  return lessThan ? lo - 1 : lo;\n};\n"]}