import { GregorianDate } from './gregorian';
import { TimePeriod } from './interval';
import { CalendarDateFields } from './types';
/**
 * A date in the Japanese Imperial calendar.
 *
 * type: japanese
 *
 * @public
 */
export declare class JapaneseDate extends GregorianDate {
    protected constructor(firstDay: number, minDays: number);
    add(fields: Partial<TimePeriod>): JapaneseDate;
    withZone(zoneId: string): JapaneseDate;
    toString(): string;
    static fromFields(fields: Partial<CalendarDateFields>, firstDay: number, minDays: number): JapaneseDate;
    static fromUnixEpoch(epoch: number, zoneId: string, firstDay: number, minDays: number): JapaneseDate;
    protected _new(): JapaneseDate;
    protected initFromUnixEpoch(epoch: number, zoneId: string): JapaneseDate;
    protected initFromJD(jd: number, msDay: number, zoneId: string): JapaneseDate;
    protected initFields(f: number[]): void;
}
