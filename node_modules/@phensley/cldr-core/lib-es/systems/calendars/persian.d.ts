import { CalendarDate } from './calendar';
import { TimePeriod } from './interval';
import { CalendarDateFields } from './types';
/**
 * Construct a date using the rules of the Persian calendar.
 *
 * type: persian
 *
 * @public
 */
export declare class PersianDate extends CalendarDate {
    protected constructor(firstDay: number, minDays: number);
    relatedYear(): number;
    set(fields: Partial<CalendarDateFields>): PersianDate;
    add(fields: Partial<TimePeriod>): PersianDate;
    subtract(fields: Partial<TimePeriod>): PersianDate;
    withZone(zoneId: string): PersianDate;
    toString(): string;
    static fromFields(fields: Partial<CalendarDateFields>, firstDay: number, minDays: number): PersianDate;
    static fromUnixEpoch(epoch: number, zoneId: string, firstDay: number, minDays: number): PersianDate;
    protected _new(): PersianDate;
    protected initFromUnixEpoch(epoch: number, zoneId: string): PersianDate;
    protected initFromJD(jd: number, msDay: number, zoneId: string): PersianDate;
    protected initFields(f: number[]): void;
    protected monthCount(): number;
    protected daysInMonth(y: number, m: number): number;
    protected daysInYear(y: number): number;
    protected monthStart(eyear: number, month: number, _useMonth: boolean): number;
    private _ymdToJD;
}
