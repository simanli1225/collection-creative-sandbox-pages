import { AltType, CharacterOrderType, LineOrderType, Vector2Arrow } from '@phensley/cldr-types';
import { MessageFormatter, MessageFormatterOptions } from '@phensley/messageformat';
import { Part } from '@phensley/decimal';
import { LanguageTag } from '@phensley/language-tag';
import { Locale } from '@phensley/locale';
import { DisplayNameOptions, ListPatternType, MeasurementCategory, MeasurementSystem } from '../common';
import { Bundle } from '../resource';
import { Internals } from '../internals';
import { General } from './api';
import { PrivateApiImpl } from './private/api';
/**
 * @internal
 */
export declare class GeneralImpl implements General {
    private _bundle;
    private _locale;
    private general;
    private names;
    private transform;
    constructor(_bundle: Bundle, _locale: Locale, internal: Internals, _private: PrivateApiImpl);
    characterOrder(): CharacterOrderType;
    lineOrder(): LineOrderType;
    bundle(): Bundle;
    locale(): Locale;
    resolveLocale(id: string | LanguageTag): Locale;
    parseLanguageTag(tag: string): LanguageTag;
    messageFormatter(options?: MessageFormatterOptions): MessageFormatter;
    measurementSystem(category?: MeasurementCategory): MeasurementSystem;
    formatList(items: string[], type?: ListPatternType): string;
    formatListToParts(items: string[], type?: ListPatternType): Part[];
    getLanguageDisplayName(code: string | LanguageTag, options?: DisplayNameOptions): string;
    getScriptDisplayName(code: string | LanguageTag, options?: DisplayNameOptions): string;
    getRegionDisplayName(code: string | LanguageTag, options?: DisplayNameOptions): string;
    protected _getVectorAlt<T extends string>(arrow: Vector2Arrow<AltType, T>, code: string, type: AltType): string;
}
