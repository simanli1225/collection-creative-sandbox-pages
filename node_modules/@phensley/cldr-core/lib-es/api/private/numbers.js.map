{"version":3,"file":"numbers.js","sourceRoot":"","sources":["../../../src/api/private/numbers.ts"],"names":[],"mappings":"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","sourcesContent":["import { NumbersSchema, NumberSystemInfo, NumberSystemName } from '@phensley/cldr-types';\n\nimport { Cache } from '@phensley/cldr-utils';\n\nimport { Internals } from '../../internals';\nimport { NumberSystemType } from '../../common';\nimport { NumberingSystem, NumberParams } from '../../common/private';\nimport { DecimalNumberingSystem } from '../../systems';\nimport { decimalNumberingDigits } from '../../systems/numbering/autogen.names';\nimport { Bundle } from '../../resource';\n\n/**\n * @internal\n */\nexport class NumberParamsCache {\n  private numberParamsCache: Cache<NumberParams>;\n  private numbers: NumbersSchema;\n  private latnSystem: NumberingSystem;\n  private latnSystemInfo: NumberSystemInfo;\n\n  constructor(\n    private bundle: Bundle,\n    private internals: Internals,\n  ) {\n    this.numberParamsCache = new Cache((s: string) => this.build(s as NumberSystemName), 20);\n    this.numbers = internals.schema.Numbers;\n    this.latnSystemInfo = this.numbers.numberSystem.get('latn') as NumberSystemInfo;\n    this.latnSystem = this.buildNumberSystem('latn');\n  }\n\n  getNumberParams(numberSystem?: NumberSystemType, defaultSystem?: NumberSystemType): NumberParams {\n    // Default numbering system for a locale unless explicitly overridden\n    // https://www.unicode.org/reports/tr35/tr35-33/tr35-numbers.html#defaultNumberingSystem\n    if (!defaultSystem) {\n      defaultSystem = 'default';\n    }\n    if (!numberSystem) {\n      numberSystem = this.bundle.numberSystem() as NumberSystemType;\n    }\n\n    let realName: NumberSystemName = this.select(numberSystem);\n\n    // Handle invalid number systems by returning the specified default\n    // TODO: include algorithmic number system check\n    if (!decimalNumberingDigits[realName]) {\n      realName = this.select(defaultSystem);\n\n      // TODO: temporary double-check to default for zh finance until we\n      // have rbnf implemented.\n      /* istanbul ignore if */\n      if (!decimalNumberingDigits[realName]) {\n        realName = this.select('default');\n      }\n    }\n\n    return this.numberParamsCache.get(realName);\n  }\n\n  protected select(numberSystem: NumberSystemType): NumberSystemName {\n    switch (numberSystem) {\n      case 'default':\n      case 'native':\n      case 'finance':\n      case 'traditional':\n        // Dereference to find real name of number system\n        return this.numbers.numberSystems.get(this.bundle, numberSystem) as NumberSystemName;\n\n      default:\n        return numberSystem;\n    }\n  }\n\n  protected build(name: NumberSystemName): NumberParams {\n    const { latnSystem } = this;\n\n    const system = name === 'latn' ? latnSystem : this.buildNumberSystem(name);\n\n    const info = this.numbers.numberSystem.get(name) || this.latnSystemInfo;\n\n    const currencySpacing = info.currencyFormats.spacing.exists(this.bundle)\n      ? info.currencyFormats.spacing.mapping(this.bundle)\n      : this.latnSystemInfo.currencyFormats.spacing.mapping(this.bundle);\n\n    const { minimumGroupingDigits, primaryGroupingSize, secondaryGroupingSize, symbols } = system;\n\n    return {\n      numberSystemName: name,\n      system,\n      latnSystem,\n      digits: makeDigits(name),\n      latinDigits: makeDigits('latn'),\n      symbols,\n      minimumGroupingDigits,\n      primaryGroupingSize,\n      secondaryGroupingSize,\n      currencySpacing,\n    };\n  }\n\n  protected buildNumberSystem(name: NumberSystemName): NumberingSystem {\n    const { bundle } = this;\n    const system = this.numbers.numberSystem;\n    const info = system.get(name) || this.latnSystemInfo;\n    const symbols = info.symbols.exists(bundle)\n      ? info.symbols.mapping(bundle)\n      : this.latnSystemInfo.symbols.mapping(bundle);\n\n    const standardRaw =\n      info.decimalFormats.standard.get(bundle) || this.latnSystemInfo.decimalFormats.standard.get(bundle);\n\n    // Fetch standard pattern to determine grouping digits\n    const standard = this.internals.numbers.getNumberPattern(standardRaw, false);\n    const minimumGroupingDigits = Number(this.numbers.minimumGroupingDigits.get(this.bundle));\n    return new DecimalNumberingSystem(\n      name,\n      decimalNumberingDigits[name],\n      symbols,\n      minimumGroupingDigits,\n      standard.priGroup,\n      standard.secGroup,\n    );\n  }\n}\n\n/**\n * The codepoints for most Unicode decimal digit sets are in increasing order.\n * To save space we store the base digit '0' and generate '1'..'9' from it.\n */\nconst makeDigits = (name: string): string[] => {\n  const digits = decimalNumberingDigits[name];\n  if (digits.length !== 10) {\n    const c = digits[0].charCodeAt(0);\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const c2 = digits[0].charCodeAt(1);\n      /* istanbul ignore else */\n      if (c2 >= 0xdc00 && c2 <= 0xdfff) {\n        for (let i = 1; i < 10; i++) {\n          const digit = String.fromCharCode(c) + String.fromCharCode(c2 + i);\n          digits.push(digit);\n        }\n      }\n    } else {\n      for (let i = 1; i < 10; i++) {\n        digits.push(String.fromCharCode(c + i));\n      }\n    }\n    decimalNumberingDigits[name] = digits;\n  }\n  return digits;\n};\n"]}