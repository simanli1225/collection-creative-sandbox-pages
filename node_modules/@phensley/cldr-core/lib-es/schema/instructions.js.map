{"version":3,"file":"instructions.js","sourceRoot":"","sources":["../../src/schema/instructions.ts"],"names":[],"mappings":"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","sourcesContent":["import { KeyIndex } from '@phensley/cldr-types';\n\n/**\n * Inverse mapping of a key to its index in an array.\n *\n * @public\n */\nexport class KeyIndexImpl<T extends string> implements KeyIndex<T> {\n  /* tslint:disable-next-line */\n  readonly index: { [P in T]: number } = Object.create(null);\n  readonly size: number;\n  readonly last: number;\n  constructor(readonly keys: T[]) {\n    this.size = keys.length;\n    this.last = this.size - 1;\n    let i = 0;\n    while (i < keys.length) {\n      this.index[keys[i]] = i;\n      i++;\n    }\n  }\n  get(key: T): number {\n    const i = this.index[key];\n    return i === undefined ? -1 : i;\n  }\n}\n\n/**\n * @public\n */\nexport interface Digits {\n  readonly type: 'digits';\n  readonly name: string;\n  readonly dim0: string;\n  readonly values: number[];\n}\n\n/**\n * @public\n */\nexport interface Field {\n  readonly type: 'field';\n  readonly name: string;\n}\n\n/**\n * @public\n */\nexport interface Origin {\n  readonly type: 'origin';\n  readonly block: Scope[];\n  readonly indices: { [x: string]: KeyIndex<any> };\n\n  getIndex(name: string): KeyIndex<any>;\n  getValues(name: string): string[];\n}\n\nconst NULL_KEYINDEX = new KeyIndexImpl<string>([]);\nconst WARNED: { [x: string]: boolean } = {};\n\n/**\n * @public\n */\nexport class OriginImpl implements Origin {\n  readonly type = 'origin';\n\n  constructor(\n    readonly block: Scope[],\n    readonly indices: { [x: string]: KeyIndex<string> },\n  ) {}\n\n  getIndex(name: string): KeyIndex<string> {\n    const r = this.indices[name];\n    if (r === undefined) {\n      /* istanbul ignore next */\n      if (!WARNED[name]) {\n        // NOTE: Unless something went horribly wrong, this should only occur during development.\n        console.log(`Error: failed to locate index/value set named \"${name}\"`);\n        WARNED[name] = true;\n      }\n      return NULL_KEYINDEX;\n    }\n    return r;\n  }\n\n  getValues(name: string): string[] {\n    return this.getIndex(name).keys;\n  }\n}\n\n/**\n * @public\n */\nexport interface Scope {\n  readonly type: 'scope';\n  readonly name: string;\n  readonly identifier: string;\n  readonly block: Instruction[];\n}\n\n/**\n * @public\n */\nexport interface ScopeMap {\n  readonly type: 'scopemap';\n  readonly name: string;\n  readonly fields: string;\n  readonly block: Instruction[];\n}\n\n/**\n * @public\n */\nexport interface Vector {\n  readonly type: 'vector';\n  readonly name: string;\n  readonly dims: string[];\n}\n\n/**\n * @public\n */\nexport type Instruction = Digits | Field | Origin | Scope | ScopeMap | Vector;\n\n/**\n * @internal\n */\nexport const digits = (name: string, dim0: string, values: number[]): Digits => ({\n  type: 'digits',\n  name,\n  dim0,\n  values,\n});\n\n/**\n * @internal\n */\nexport const field = (name: string): Field => ({ type: 'field', name });\n\n/**\n * @internal\n */\nexport const origin = (block: Scope[], indices: { [x: string]: KeyIndex<any> }): Origin =>\n  new OriginImpl(block, indices);\n\n/**\n * @internal\n */\nexport const scope = (name: string, identifier: string, block: Instruction[]): Scope => ({\n  type: 'scope',\n  name,\n  identifier,\n  block,\n});\n\n/**\n * @internal\n */\nexport const scopemap = (name: string, fields: string, block: Instruction[]): ScopeMap => ({\n  type: 'scopemap',\n  name,\n  fields,\n  block,\n});\n\n/**\n * @internal\n */\nexport const vector = (name: string, dims: string[]): Vector => ({ type: 'vector', name, dims });\n"]}