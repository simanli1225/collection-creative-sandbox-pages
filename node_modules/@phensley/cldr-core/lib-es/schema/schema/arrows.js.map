{"version":3,"file":"arrows.js","sourceRoot":"","sources":["../../../src/schema/schema/arrows.ts"],"names":[],"mappings":"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","sourcesContent":["import { DigitsArrow, FieldArrow, KeyIndex, PrimitiveBundle, ScopeArrow } from '@phensley/cldr-types';\n\n/**\n * @public\n */\nexport class FieldArrowImpl implements FieldArrow {\n  constructor(readonly offset: number) {}\n\n  get(bundle: PrimitiveBundle): string {\n    return bundle.get(this.offset);\n  }\n}\n\n/**\n * @public\n */\nexport class ScopeArrowImpl<T extends string, R> implements ScopeArrow<T, R> {\n  constructor(readonly map: { [P in T]: R }) {}\n\n  get(key: T): R | undefined {\n    return this.map[key];\n  }\n}\n\n/**\n * Special vector to store a pluralized number pattern and its divisor together.\n *\n * @public\n */\nexport class DigitsArrowImpl<T extends string> implements DigitsArrow<T> {\n  static EMPTY: [string, number] = ['', 0];\n\n  readonly size2: number;\n\n  constructor(\n    readonly offset: number,\n    readonly index: KeyIndex<T>,\n    readonly values: number[],\n  ) {\n    this.size2 = values.length * 2; // store pattern and divisor as a pair\n  }\n\n  get(bundle: PrimitiveBundle, key: T, digits: number): [string, number] {\n    if (digits > this.values.length) {\n      digits = this.values.length;\n    }\n    if (digits > 0) {\n      const i = this.index.get(key);\n      if (i !== -1) {\n        const k = this.offset + i * this.size2 + (digits - 1) * 2;\n        const p = bundle.get(k);\n        const d = bundle.get(k + 1);\n        return [p, Number(d)];\n      }\n    }\n    return DigitsArrowImpl.EMPTY;\n  }\n}\n\n/**\n * Generalized multi-dimensional vector arrow.\n *\n * @public\n */\nexport class VectorArrowImpl {\n  readonly offset: number;\n  readonly len: number;\n\n  private last: number;\n  private factors: number[];\n\n  constructor(\n    offset: number,\n    readonly keysets: KeyIndex<string>[],\n  ) {\n    this.offset = offset + 1; // skip over header\n    this.len = keysets.length;\n    this.last = this.len - 1;\n    this.factors = new Array(this.len);\n\n    // Pre-compute the address factor for each dimension:\n    //  1-dim:        [ index0 ]\n    //  2-dim:        [ (index0 * size1), index1 ]\n    //  3-dim:        [ (index0 * size1 * size2), (index1 * size), index2 ]\n    //  ...\n    for (let i = 0; i < this.len; i++) {\n      let k = 1;\n      for (let j = i + 1; j < this.len; j++) {\n        k *= this.keysets[j].size;\n      }\n      this.factors[i] = k;\n    }\n  }\n\n  valid(...keys: (string | string[])[]): boolean {\n    return this._index(keys, 0, this.offset) !== -1;\n  }\n\n  exists(bundle: PrimitiveBundle): boolean {\n    return bundle.get(this.offset - 1) === 'E';\n  }\n\n  get(bundle: PrimitiveBundle, ...keys: (string | string[])[]): string {\n    if (keys.length !== this.len) {\n      // Impossible lookup, will never reach a valid field\n      throw new Error(`Warning: impossible vector lookup with keys ${JSON.stringify(keys)}`);\n    }\n    if (!this.exists(bundle)) {\n      return '';\n    }\n    return this._get(bundle, keys, 0, this.offset);\n  }\n\n  mapping(bundle: PrimitiveBundle): any {\n    return this.exists(bundle) ? this._mapping(bundle, 0, 0) : {};\n  }\n\n  private _index(keys: (string | string[])[], ix: number, k: number): number {\n    const key = keys[ix];\n    const args = typeof key === 'string' ? [key] : key;\n    const last = args.length - 1;\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      const j = this.keysets[ix].get(arg);\n      if (j === -1) {\n        if (i !== last) {\n          continue;\n        }\n        return -1;\n      }\n      const kk = k + j * this.factors[ix];\n      if (ix === this.last) {\n        return kk;\n      }\n      const result = this._index(keys, ix + 1, kk);\n      if (result !== -1) {\n        return result;\n      }\n    }\n    return -1;\n  }\n\n  private _get(bundle: PrimitiveBundle, keys: (string | string[])[], ix: number, k: number): string {\n    const key = keys[ix];\n    const args = typeof key === 'string' ? [key] : key;\n    const last = args.length - 1;\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      const j = this.keysets[ix].get(arg);\n      if (j === -1) {\n        if (i !== last) {\n          continue;\n        }\n        return '';\n      }\n      const kk = k + j * this.factors[ix];\n      const val = ix === this.last ? bundle.get(kk) : this._get(bundle, keys, ix + 1, kk);\n      if (!!val) {\n        return val;\n      }\n    }\n    return '';\n  }\n\n  private _mapping(bundle: PrimitiveBundle, k: number, ix: number): any {\n    const o: any = {};\n    const keys = this.keysets[k].keys;\n    const last = k === this.last;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (last) {\n        // We're at the value level of the map, so lookup the corresponding string\n        const val = bundle.get(this.offset + i + ix);\n        if (val) {\n          o[key] = val;\n        }\n      } else {\n        // Drill one level deeper\n        o[key] = this._mapping(bundle, k + 1, ix + i * this.factors[k]);\n      }\n    }\n    return o;\n  }\n}\n"]}