{"version":3,"file":"formatterimpl.js","sourceRoot":"","sources":["../../../src/internals/calendars/formatterimpl.ts"],"names":[],"mappings":"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","sourcesContent":["import { CalendarSchema, ContextTransformFieldType, TimeZoneSchema, Vector2Arrow } from '@phensley/cldr-types';\n\nimport { GeneralInternals } from '../../internals/internals';\nimport { Bundle } from '../../resource/bundle';\nimport { Internals } from '../internals';\nimport { CalendarDate } from '../../systems/calendars';\nimport { DateTimeNode } from '../../parsing/date';\nimport { AbstractValue } from '../../utils/render';\nimport { CalendarContext, CalendarFormatter } from './formatter';\n\nconst min = Math.min;\n\ntype TZC = [number, boolean, number, number];\n\nconst getTZC = (offset: number): TZC => {\n  const negative = offset < 0;\n  if (negative) {\n    offset *= -1;\n  }\n  offset /= 60000;\n  const hours = (offset / 60) | 0;\n  const minutes = offset % 60 | 0;\n  return [offset, negative, hours, minutes];\n};\n\nconst widthKey1 = (w: number): string => (w === 5 ? 'narrow' : w === 4 ? 'wide' : 'abbreviated');\n\n/**\n * Format a number using the main numbering system, with the given minimum integers.\n */\nconst _num = <T extends CalendarDate>(ctx: CalendarContext<T>, n: number, minInt: number): string =>\n  ctx.system.formatString(n, false, minInt);\n\nconst _year = <T extends CalendarDate>(ctx: CalendarContext<T>, year: number, width: number): string =>\n  _num(ctx, width === 2 ? year % 100 : year, width);\n\nexport class CalendarFormatterImpl<T extends CalendarDate> implements CalendarFormatter<T> {\n  private general: GeneralInternals;\n  private tz: TimeZoneSchema;\n\n  constructor(\n    private internals: Internals,\n    private cal: CalendarSchema,\n  ) {\n    this.general = internals.general;\n    this.tz = internals.schema.TimeZones;\n  }\n\n  format<R>(val: AbstractValue<R>, ctx: CalendarContext<T>, nodes: DateTimeNode[], first: boolean = true): void {\n    const len = nodes.length;\n    for (let i = 0; i < len; i++) {\n      const n = nodes[i];\n      if (typeof n === 'string') {\n        val.add('literal', n);\n        continue;\n      }\n\n      const w = n[1];\n      let field: ContextTransformFieldType | undefined;\n      let type = '';\n      let value = '';\n\n      // Date field symbol table\n      // https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n\n      switch (n[0]) {\n        // ERA\n        case 'G': {\n          type = 'era';\n          const era = `${ctx.date.era()}`;\n          const width = w === 5 ? 'narrow' : w === 4 ? 'names' : 'abbr';\n          value = this.cal.eras.get(ctx.bundle, width, era, [ctx.alt.era!, 'none']);\n          if (w !== 5) {\n            field = w === 4 ? 'era-name' : 'era-abbr';\n          }\n          break;\n        }\n\n        // YEAR\n        case 'y':\n          type = 'year';\n          value = _year(ctx, ctx.date.year(), w);\n          break;\n\n        // YEAR IN WEEK OF YEAR\n        case 'Y':\n          type = 'year';\n          value = _year(ctx, ctx.date.yearOfWeekOfYear(), w);\n          break;\n\n        // EXTENDED YEAR\n        case 'u':\n          type = 'year';\n          value = _num(ctx, ctx.date.extendedYear(), w);\n          break;\n\n        // CYCLIC YEAR\n        case 'U':\n          type = 'cyclic-year';\n          // TODO: support chinese cyclical years\n          value = '';\n          break;\n\n        // RELATED YEAR\n        case 'r':\n          type = 'related-year';\n          // Note: this is always rendered using 'latn' digits\n          value = ctx.latnSystem.formatString(ctx.date.relatedYear(), false, w);\n          break;\n\n        // QUARTER\n        case 'Q':\n        case 'q':\n          type = 'quarter';\n          value = this.quarter(ctx, n);\n          break;\n\n        // MONTH FORMAT\n        case 'M':\n          type = 'month';\n          value = this.month(ctx, n);\n          switch (w) {\n            case 3:\n            case 4:\n              field = 'month-format-except-narrow';\n              break;\n          }\n          break;\n\n        // MONTH STANDALONE\n        case 'L':\n          type = 'month';\n          value = this.month(ctx, n);\n          switch (w) {\n            case 3:\n            case 4:\n              field = 'month-standalone-except-narrow';\n              break;\n          }\n          break;\n\n        // 'l' - deprecated\n\n        // WEEK OF WEEK YEAR\n        case 'w':\n          type = 'week';\n          value = _num(ctx, ctx.date.weekOfYear(), min(w, 2));\n          break;\n\n        // WEEK OF MONTH\n        case 'W':\n          type = 'week';\n          value = _num(ctx, ctx.date.weekOfMonth(), 1);\n          break;\n\n        // DAY OF MONTH\n        case 'd':\n          type = 'day';\n          value = _num(ctx, ctx.date.dayOfMonth(), min(w, 2));\n          break;\n\n        // DAY OF YEAR\n        case 'D':\n          type = 'day';\n          value = _num(ctx, ctx.date.dayOfYear(), min(w, 3));\n          break;\n\n        // DAY OF WEEK IN MONTH\n        case 'F':\n          type = 'day';\n          value = _num(ctx, ctx.date.dayOfWeekInMonth(), 1);\n          break;\n\n        // MODIFIED JULIAN DAY\n        case 'g':\n          type = 'mjulian-day';\n          value = _num(ctx, ctx.date.modifiedJulianDay(), w);\n          break;\n\n        // WEEKDAY FORMAT\n        case 'E':\n          type = 'weekday';\n          value = this._weekday(ctx.bundle, this.cal.format.weekdays, ctx.date, w);\n          if (w !== 5) {\n            field = 'day-format-except-narrow';\n          }\n          break;\n\n        // WEEKDAY LOCAL\n        case 'e':\n          type = 'weekday';\n          value = this._weekdayLocal(ctx, n, false);\n          break;\n\n        // WEEKDAY LOCAL STANDALONE\n        case 'c':\n          type = 'weekday';\n          value = this._weekdayLocal(ctx, n, true);\n          if (w !== 5) {\n            field = 'day-standalone-except-narrow';\n          }\n          break;\n\n        // DAY PERIOD AM/PM\n        case 'a': {\n          const ampm = ctx.date.hourOfDay() < 12 ? 'am' : 'pm';\n          const width = widthKey1(w);\n          type = 'dayperiod';\n          value = this.cal.format.dayPeriods.get(ctx.bundle, width, ampm, [ctx.alt.dayPeriod!, 'none']);\n          break;\n        }\n\n        // DAY PERIOD EXTENDED\n        case 'b':\n          type = 'dayperiod';\n          value = this.dayPeriodExt(ctx, n);\n          break;\n\n        // DAY PERIOD FLEXIBLE\n        case 'B':\n          type = 'dayperiod';\n          value = this.dayPeriodFlex(ctx, n);\n          break;\n\n        // HOUR 1-12 and 0-23\n        case 'h':\n        case 'H':\n          type = 'hour';\n          value = this.hour(ctx, n);\n          break;\n\n        // HOUR 0-11 and 1-24\n        case 'K':\n        case 'k':\n          type = 'hour';\n          value = this.hourAlt(ctx, n);\n          break;\n\n        // 'j', 'J', 'C' - input skeleton symbols, not present in formats\n\n        // MINUTE\n        case 'm':\n          type = 'minute';\n          value = _num(ctx, ctx.date.minute(), min(w, 2));\n          break;\n\n        // SECOND\n        case 's':\n          type = 'second';\n          value = _num(ctx, ctx.date.second(), min(w, 2));\n          break;\n\n        // FRACTIONAL SECOND\n        case 'S':\n          type = 'fracsec';\n          value = this.fractionalSecond(ctx, n);\n          break;\n\n        // MILLISECONDS IN DAY\n        case 'A':\n          type = 'millis-in-day';\n          value = _num(ctx, ctx.date.millisecondsInDay(), w);\n          break;\n\n        // TIMEZONE SPECIFIC NON-LOCATION\n        case 'z':\n          type = 'timezone';\n          value = this.timezone_z(ctx, n);\n          break;\n\n        // TIMEZONE ISO-8601 EXTENDED\n        case 'Z':\n          type = 'timezone';\n          value = this.timezone_Z(ctx, n);\n          break;\n\n        // TIMEZONE LOCALIZED\n        case 'O':\n          type = 'timezone';\n          value = this.timezone_O(ctx, n);\n          break;\n\n        // TIMEZONE GENERIC NON-LOCATION\n        case 'v':\n          type = 'timezone';\n          value = this.timezone_v(ctx, n);\n          break;\n\n        // TIMEZONE ID, EXEMPLAR CITY, GENERIC LOCATION\n        case 'V':\n          type = 'timezone';\n          value = this.timezone_V(ctx, n);\n          break;\n\n        // TIMEZONE ISO-8601 BASIC, EXTENDED\n        case 'X':\n        case 'x':\n          type = 'timezone';\n          value = this.timezone_x(ctx, n);\n          break;\n\n        default:\n          continue;\n      }\n\n      if (first && i === 0 && ctx.context && field) {\n        value = this.internals.general.contextTransform(value, ctx.transform, ctx.context, field);\n      }\n      val.add(type, value);\n    }\n  }\n\n  private _formatQuarterOrMonth(\n    ctx: CalendarContext<T>,\n    format: Vector2Arrow<string, string>,\n    value: number,\n    width: number,\n  ): string {\n    return width >= 3 ? format.get(ctx.bundle, widthKey1(width), String(value)) : _num(ctx, value, width);\n  }\n\n  private quarter(ctx: CalendarContext<T>, node: [string, number]): string {\n    const [field, width] = node;\n    const format = field === 'Q' ? this.cal.format : this.cal.standAlone;\n    const quarters = format.quarters;\n    const quarter = (((ctx.date.month() - 1) / 3) | 0) + 1;\n    return this._formatQuarterOrMonth(ctx, quarters, quarter, width);\n  }\n\n  private month(ctx: CalendarContext<T>, node: [string, number]): string {\n    const format = node[0] === 'M' ? this.cal.format : this.cal.standAlone;\n    return this._formatQuarterOrMonth(ctx, format.months, ctx.date.month(), node[1]);\n  }\n\n  private _weekday(bundle: Bundle, format: Vector2Arrow<string, string>, date: CalendarDate, width: number): string {\n    const key2 = String(date.dayOfWeek());\n    let key1 = 'abbreviated';\n    switch (width) {\n      case 6:\n        key1 = 'short';\n        break;\n      case 5:\n        key1 = 'narrow';\n        break;\n      case 4:\n        key1 = 'wide';\n        break;\n    }\n    return format.get(bundle, key1, key2);\n  }\n\n  private _weekdayLocal(ctx: CalendarContext<T>, node: [string, number], standAlone: boolean): string {\n    const { bundle, date } = ctx;\n    let width = node[1];\n    if (width > 2) {\n      const format = standAlone ? this.cal.standAlone : this.cal.format;\n      return this._weekday(bundle, format.weekdays, date, width);\n    }\n    const ord = date.ordinalDayOfWeek();\n    if (standAlone) {\n      width = 1;\n    }\n    return ctx.system.formatString(ord, false, width);\n  }\n\n  private dayPeriodExt(ctx: CalendarContext<T>, node: [string, number]): string {\n    const { bundle, date } = ctx;\n    const key1 = widthKey1(node[1]);\n    const key2 = date.isAM() ? 'am' : 'pm';\n    let key2ext = key2;\n    if (date.minute() === 0) {\n      const hour = date.hourOfDay();\n      key2ext = hour === 0 ? 'midnight' : hour === 12 ? 'noon' : key2;\n    }\n    const format = this.cal.format.dayPeriods;\n    // Try extended and if it doesn't exist fall back to am/pm\n    return format.get(bundle, key1, [key2ext, key2], [ctx.alt.dayPeriod!, 'none']);\n  }\n\n  private dayPeriodFlex(ctx: CalendarContext<T>, node: [string, number]): string {\n    const { bundle, date } = ctx;\n    const minutes = date.hourOfDay() * 60 + date.minute();\n    const key2 = this.internals.calendars.flexDayPeriod(bundle, minutes);\n    let res = '';\n    if (key2) {\n      const width = widthKey1(node[1]);\n      // TODO: more compact fallbacks for alternatives\n      res = this.cal.format.dayPeriods.get(bundle, width, key2, [ctx.alt.dayPeriod!, 'none']);\n    }\n    return res ? res : this.dayPeriodExt(ctx, node);\n  }\n\n  private hour(ctx: CalendarContext<T>, node: [string, number]): string {\n    const { date } = ctx;\n    const twelve = node[0] === 'h';\n    let hour = twelve ? date.hour() : date.hourOfDay();\n    if (twelve && hour === 0) {\n      hour = 12;\n    }\n    return _num(ctx, hour, min(node[1], 2));\n  }\n\n  private hourAlt(ctx: CalendarContext<T>, node: [string, number]): string {\n    const { date } = ctx;\n    const twelve = node[0] === 'K';\n    let hour = twelve ? date.hour() : date.hourOfDay();\n    if (!twelve && hour === 0) {\n      hour = 24;\n    }\n    return _num(ctx, hour, min(node[1], 2));\n  }\n\n  private fractionalSecond(ctx: CalendarContext<T>, node: [string, number]): string {\n    let w = node[1];\n    let m = ctx.date.milliseconds();\n    const d = w > 3 ? w - 3 : 0;\n    w -= d;\n    if (d > 0) {\n      m *= Math.pow(10, d);\n    }\n    // Milliseconds always have precision of 3, so handle the cases compactly.\n    const n = w === 3 ? m : (w === 2 ? m / 10 : m / 100) | 0;\n    return _num(ctx, n, node[1]);\n  }\n\n  /**\n   * Timezone: short/long specific non-location format.\n   * https://www.unicode.org/reports/tr35/tr35-dates.html#dfst-zone\n   */\n  private timezone_z(ctx: CalendarContext<T>, node: [string, number]): string {\n    if (node[1] > 4) {\n      return '';\n    }\n    const key2 = ctx.date.metaZoneId();\n    if (key2) {\n      const { long, short } = this.tz.metaZones;\n      const format = node[1] === 4 ? long : short;\n      const name = format.get(ctx.bundle, ctx.date.isDaylightSavings() ? 'daylight' : 'standard', key2);\n      if (name) {\n        return name;\n      }\n    }\n    return this.timezone_O(ctx, node);\n  }\n\n  /**\n   * Timezone: ISO8601 basic/extended format, long localized GMT format.\n   * https://www.unicode.org/reports/tr35/tr35-dates.html#dfst-zone\n   */\n  private timezone_Z(ctx: CalendarContext<T>, node: [string, number]): string {\n    const width = node[1];\n    if (width === 4) {\n      return this.timezone_O(ctx, ['O', width]);\n    }\n\n    const [, negative, hours, minutes] = getTZC(ctx.date.timeZoneOffset());\n    let fmt = '';\n    if (width <= 5) {\n      // TODO: use number params\n      fmt += negative ? '-' : '+';\n      fmt += _num(ctx, hours, 2);\n      if (width === 5) {\n        fmt += ':';\n      }\n      fmt += _num(ctx, minutes, 2);\n    }\n    return fmt;\n  }\n\n  /**\n   * Timezone: short/long localized GMT format.\n   */\n  private timezone_O(ctx: CalendarContext<T>, node: [string, number]): string {\n    return node[1] === 1 || node[1] === 4 ? this._wrapGMT(ctx, node[1] === 1) : '';\n  }\n\n  /**\n   * Timezone: short/long generic non-location format.\n   */\n  private timezone_v(ctx: CalendarContext<T>, node: [string, number]): string {\n    const width = node[1];\n    if (width !== 1 && width !== 4) {\n      return '';\n    }\n    let name = '';\n    const key = ctx.date.metaZoneId();\n    const { long, short } = this.tz.metaZones;\n    const format = width === 1 ? short : long;\n    name = format.get(ctx.bundle, 'generic', key);\n    return name ? name : this.timezone_O(ctx, ['O', width]);\n  }\n\n  /**\n   * Timezone: short/long zone ID, exemplar city, generic location format.\n   * https://www.unicode.org/reports/tr35/tr35-dates.html#dfst-zone\n   */\n  private timezone_V(ctx: CalendarContext<T>, node: [string, number]): string {\n    const { bundle } = ctx;\n    const stableId = ctx.date.timeZoneStableId();\n    const exemplarCity = this.tz.exemplarCity;\n    let city = '';\n    switch (node[1]) {\n      case 4:\n        city = exemplarCity.get(bundle, stableId);\n        if (!city) {\n          return this.timezone_O(ctx, ['O', 4]);\n        }\n        const pattern = this.tz.regionFormat.get(bundle);\n        return this.general.formatWrapper(pattern, [city]);\n\n      case 3:\n        // Exemplar city for the timezone.\n        city = exemplarCity.get(bundle, stableId);\n        return city ? city : exemplarCity.get(bundle, 'Etc/Unknown');\n\n      case 2:\n        const zoneId = ctx.date.timeZoneId();\n        return zoneId;\n\n      case 1:\n        return 'unk';\n    }\n    return '';\n  }\n\n  /**\n   * Timezone: ISO8601 basic format\n   * https://www.unicode.org/reports/tr35/tr35-dates.html#dfst-zone\n   */\n  private timezone_x(ctx: CalendarContext<T>, node: [string, number]): string {\n    const [field, width] = node;\n    const [offset, negative, hours, minutes] = getTZC(ctx.date.timeZoneOffset());\n    let fmt = '';\n    if (width >= 1 && width <= 5) {\n      const zero = hours === 0 && minutes === 0;\n      fmt += zero ? '+' : negative ? '-' : '+';\n      fmt += _num(ctx, hours, 2);\n      if (width === 3 || width === 5) {\n        fmt += ':';\n      }\n      if (width !== 1 || minutes > 0) {\n        fmt += _num(ctx, minutes, 2);\n      }\n      if (field === 'X' && offset === 0) {\n        fmt += 'Z';\n      }\n    }\n    return fmt;\n  }\n\n  private _wrapGMT(ctx: CalendarContext<T>, short: boolean): string {\n    const { bundle, date } = ctx;\n    const _offset = date.timeZoneOffset();\n    if (_offset === 0) {\n      return this.tz.gmtZeroFormat.get(bundle);\n    }\n    const [, negative, hours, minutes] = getTZC(_offset);\n\n    const emitMins = !short || minutes > 0;\n    const hourPattern = this._hourPattern(bundle, negative);\n    let fmt = '';\n    for (const n of hourPattern) {\n      if (typeof n === 'string') {\n        const sep = n === '.' || n === ':';\n        if (!sep || emitMins) {\n          fmt += n;\n        }\n      } else {\n        const [field, width] = n;\n        if (field === 'H') {\n          fmt += width === 1 ? _num(ctx, hours, 1) : _num(ctx, hours, short ? 1 : width);\n        } else if (field === 'm' && emitMins) {\n          fmt += _num(ctx, minutes, width);\n        }\n      }\n    }\n\n    const wrap = this.tz.gmtFormat.get(bundle);\n    return this.general.formatWrapper(wrap, [fmt]);\n  }\n\n  private _hourPattern(bundle: Bundle, negative: boolean): DateTimeNode[] {\n    const raw = this.tz.hourFormat.get(bundle);\n    return this.internals.calendars.getHourPattern(raw, negative);\n  }\n}\n"]}