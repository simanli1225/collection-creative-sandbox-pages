import { binarySearch, Cache } from '@phensley/cldr-utils';
import { numarray } from '../../utils/string';
import { dayPeriodKeys, dayPeriodRules } from './autogen.dayperiods';
var parseRule = function (raw) {
    var parts = raw.split('|');
    var minutes = numarray(parts[1], 36);
    var keys = numarray(parts[0]).map(function (n) { return dayPeriodKeys[n]; });
    return { keys: keys, minutes: minutes };
};
var DayPeriodRules = /** @class */ (function () {
    function DayPeriodRules(cacheSize) {
        this.cache = new Cache(parseRule, cacheSize);
    }
    DayPeriodRules.prototype.get = function (bundle, minutes) {
        var raw = dayPeriodRules[bundle.languageRegion()] || dayPeriodRules[bundle.language()];
        if (raw === undefined) {
            return undefined;
        }
        var rule = this.cache.get(raw);
        var i = binarySearch(rule.minutes, true, minutes);
        return rule.keys[i];
    };
    return DayPeriodRules;
}());
export { DayPeriodRules };
//# sourceMappingURL=rules.js.map