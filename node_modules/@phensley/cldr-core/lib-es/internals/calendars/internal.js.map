{"version":3,"file":"internal.js","sourceRoot":"","sources":["../../../src/internals/calendars/internal.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAC;AAG7C,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACnE,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AAK/D,OAAO,EAAE,qBAAqB,EAAE,MAAM,iBAAiB,CAAC;AAExD,OAAO,EAAE,uBAAuB,EAAE,gBAAgB,EAAgB,MAAM,oBAAoB,CAAC;AAC7F,OAAO,EAAE,cAAc,EAAE,MAAM,SAAS,CAAC;AAEzC;;;;GAIG;AACH;IAQE,+BACU,SAAoB,EAC5B,SAAiB;QAFnB,iBAiCC;QAhCS,cAAS,GAAT,SAAS,CAAW;QAG5B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,SAAS,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC;QACpE,IAAI,CAAC,gBAAgB,GAAG,IAAI,KAAK,CAAC,UAAC,GAAW;YAC5C,IAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC7B,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5E,CAAC,EAAE,SAAS,CAAC,CAAC;QAEd,IAAI,CAAC,sBAAsB,GAAG,IAAI,KAAK,CAAC,UAAC,QAAgB;YACvD,IAAI,CAA6B,CAAC;YAClC,IAAI,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC;gBAC1C,QAAQ,QAAQ,EAAE,CAAC;oBACjB,KAAK,UAAU;wBACb,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;wBACzB,MAAM;oBACR,KAAK,UAAU;wBACb,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;wBACzB,MAAM;oBACR,KAAK,SAAS;wBACZ,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC;wBACxB,MAAM;gBACV,CAAC;YACH,CAAC;YACD,IAAI,CAAC,KAAK,SAAS,EAAE,CAAC;gBACpB,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC;YAC5B,CAAC;YACD,OAAO,IAAI,qBAAqB,CAAC,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QACtD,CAAC,EAAE,SAAS,CAAC,CAAC;IAChB,CAAC;IAED,6CAAa,GAAb,UAAc,MAAc,EAAE,OAAe;QAC3C,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAClD,CAAC;IAED,oDAAoB,GAApB,UAAqB,IAAkB;QACrC,OAAO,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,gDAAgB,GAAhB,UAAiB,GAAW;QAC1B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,8CAAc,GAAd,UAAe,GAAW,EAAE,QAAiB;QAC3C,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAChD,OAAO,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,4CAAY,GAAZ,UAAa,MAAc;QACzB,OAAO,YAAY,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;IACrD,CAAC;IAED,2CAAW,GAAX,UAAY,MAAc;QACxB,OAAO,WAAW,CAAC,MAAM,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,8CAAc,GAAd,UACE,QAAsB,EACtB,GAAkC,EAClC,KAAuB,EACvB,KAAc,EACd,IAAqB,EACrB,IAAqB,EACrB,OAAgB;QAEhB,IAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QACtD,IAAI,KAAoB,CAAC;QACzB,IAAI,KAAoB,CAAC;QACzB,IAAI,IAAI,EAAE,CAAC;YACT,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC1C,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QACzB,CAAC;QACD,IAAI,IAAI,EAAE,CAAC;YACT,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC;YACpD,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QACzB,CAAC;QACD,IAAI,KAAK,IAAI,KAAK,IAAI,OAAO,EAAE,CAAC;YAC9B,IAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAC7D,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;YACpC,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC;QACxB,CAAC;QACD,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACvD,CAAC;IAED,8CAAc,GAAd,UACE,QAAsB,EACtB,GAAkC,EAClC,KAAuB,EACvB,KAAc,EACd,GAAiB,EACjB,OAAuB;QAEvB,IAAM,GAAG,GAAG,uBAAuB,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAM,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAClF,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC;QACf,IAAM,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/E,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1B,CAAC;IAED,8CAAc,GAAd,UAAe,MAAc,EAAE,EAAiB;QAC9C,IAAI,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC;QAC7F,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,IAAM,KAAK,GAAG,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAC3E,KAAiB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE,CAAC;gBAApB,IAAM,EAAE,cAAA;gBACX,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;gBACnD,IAAI,QAAQ,EAAE,CAAC;oBACb,OAAO,QAAQ,CAAC;gBAClB,CAAC;YACH,CAAC;YACD,OAAO,SAAS,CAAC;QACnB,CAAC;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;OAEG;IACK,iDAAiB,GAAzB,UAA0B,CAAqB;QAC7C,sFAAsF;QACtF,2FAA2F;QAC3F,+DAA+D;QAC/D,IAAI,CAAC,KAAK,WAAW,EAAE,CAAC;YACtB,CAAC,GAAG,SAAS,CAAC;QAChB,CAAC;QAED,IAAI,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YACxC,QAAQ,CAAC,EAAE,CAAC;gBACV,KAAK,UAAU,CAAC;gBAChB,KAAK,SAAS,CAAC;gBACf,KAAK,UAAU,CAAC;gBAChB,KAAK,SAAS,CAAC;gBACf,KAAK,SAAS;oBACZ,OAAO,CAAC,CAAC;YACb,CAAC;QACH,CAAC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IACH,4BAAC;AAAD,CAAC,AArJD,IAqJC","sourcesContent":["import { CalendarSchema, DayPeriodType, Schema } from '@phensley/cldr-types';\nimport { Cache } from '@phensley/cldr-utils';\n\nimport { CalendarDate, CalendarType } from '../../systems/calendars';\nimport { calendarIds, calendarPrefData } from './autogen.calprefs';\nimport { weekFirstDay, weekMinDays } from './autogen.weekdata';\nimport { Bundle } from '../../resource';\nimport { CalendarInternals } from '../internals';\nimport { AbstractValue } from '../../utils/render';\nimport { CalendarContext, CalendarFormatter } from './formatter';\nimport { CalendarFormatterImpl } from './formatterimpl';\nimport { Internals } from '../internals';\nimport { intervalPatternBoundary, parseDatePattern, DateTimeNode } from '../../parsing/date';\nimport { DayPeriodRules } from './rules';\n\n/**\n * Framework scoped calendar functions.\n *\n * @internal\n */\nexport class CalendarInternalsImpl implements CalendarInternals {\n  private schema: Schema;\n  private dayPeriodRules: DayPeriodRules;\n  private patternCache: Cache<DateTimeNode[]>;\n  private hourPatternCache: Cache<[DateTimeNode[], DateTimeNode[]]>;\n  private calendarFormatterCache: Cache<CalendarFormatter<CalendarDate>>;\n  private availableCalendars: Set<string>;\n\n  constructor(\n    private internals: Internals,\n    cacheSize: number,\n  ) {\n    this.schema = internals.schema;\n    this.dayPeriodRules = new DayPeriodRules(cacheSize);\n    this.patternCache = new Cache(parseDatePattern, cacheSize);\n    this.availableCalendars = new Set(internals.config.calendars || []);\n    this.hourPatternCache = new Cache((raw: string): [DateTimeNode[], DateTimeNode[]] => {\n      const parts = raw.split(';');\n      return [this.patternCache.get(parts[0]), this.patternCache.get(parts[1])];\n    }, cacheSize);\n\n    this.calendarFormatterCache = new Cache((calendar: string) => {\n      let s: CalendarSchema | undefined;\n      if (this.availableCalendars.has(calendar)) {\n        switch (calendar) {\n          case 'buddhist':\n            s = this.schema.Buddhist;\n            break;\n          case 'japanese':\n            s = this.schema.Japanese;\n            break;\n          case 'persian':\n            s = this.schema.Persian;\n            break;\n        }\n      }\n      if (s === undefined) {\n        s = this.schema.Gregorian;\n      }\n      return new CalendarFormatterImpl(this.internals, s);\n    }, cacheSize);\n  }\n\n  flexDayPeriod(bundle: Bundle, minutes: number): DayPeriodType | undefined {\n    return this.dayPeriodRules.get(bundle, minutes);\n  }\n\n  getCalendarFormatter(type: CalendarType): CalendarFormatter<CalendarDate> {\n    return this.calendarFormatterCache.get(type);\n  }\n\n  parseDatePattern(raw: string): DateTimeNode[] {\n    return this.patternCache.get(raw);\n  }\n\n  getHourPattern(raw: string, negative: boolean): DateTimeNode[] {\n    const patterns = this.hourPatternCache.get(raw);\n    return patterns[negative ? 1 : 0];\n  }\n\n  weekFirstDay(region: string): number {\n    return weekFirstDay[region] || weekFirstDay['001'];\n  }\n\n  weekMinDays(region: string): number {\n    return weekMinDays[region] || weekMinDays['001'];\n  }\n\n  formatDateTime<R>(\n    calendar: CalendarType,\n    ctx: CalendarContext<CalendarDate>,\n    value: AbstractValue<R>,\n    first: boolean,\n    date?: DateTimeNode[],\n    time?: DateTimeNode[],\n    wrapper?: string,\n  ): R {\n    const formatter = this.getCalendarFormatter(calendar);\n    let _date: R | undefined;\n    let _time: R | undefined;\n    if (date) {\n      formatter.format(value, ctx, date, first);\n      _date = value.render();\n    }\n    if (time) {\n      formatter.format(value, ctx, time, !!date && first);\n      _time = value.render();\n    }\n    if (_date && _time && wrapper) {\n      const pattern = this.internals.general.parseWrapper(wrapper);\n      value.wrap(pattern, [_time, _date]);\n      return value.render();\n    }\n    return _date ? _date : _time ? _time : value.empty();\n  }\n\n  formatInterval<R>(\n    calendar: CalendarType,\n    ctx: CalendarContext<CalendarDate>,\n    value: AbstractValue<R>,\n    first: boolean,\n    end: CalendarDate,\n    pattern: DateTimeNode[],\n  ): R {\n    const idx = intervalPatternBoundary(pattern);\n    const s = this.formatDateTime(calendar, ctx, value, first, pattern.slice(0, idx));\n    ctx.date = end;\n    const e = this.formatDateTime(calendar, ctx, value, false, pattern.slice(idx));\n    return value.join(s, e);\n  }\n\n  selectCalendar(bundle: Bundle, ca?: CalendarType): CalendarType {\n    let calendar = this.supportedCalendar(ca) || this.supportedCalendar(bundle.calendarSystem());\n    if (!calendar) {\n      const prefs = calendarPrefData[bundle.region()] || calendarPrefData['001'];\n      for (const id of prefs) {\n        calendar = this.supportedCalendar(calendarIds[id]);\n        if (calendar) {\n          return calendar;\n        }\n      }\n      return 'gregory';\n    }\n    return calendar;\n  }\n\n  /**\n   * Translates a string into a supported calendar type, or undefined if none match.\n   */\n  private supportedCalendar(c: string | undefined): CalendarType | undefined {\n    // NOTE: cldr constrains identifiers to have segments that are 8 characters in length,\n    // so \"gregorian\" is invalid. instead, \"gregory\" is used. \"islamic-umalqura\" is valid since\n    // each segment is <= 8 characters. check for \"gregorian\" here.\n    if (c === 'gregorian') {\n      c = 'gregory';\n    }\n\n    if (c && this.availableCalendars.has(c)) {\n      switch (c) {\n        case 'buddhist':\n        case 'iso8601':\n        case 'japanese':\n        case 'persian':\n        case 'gregory':\n          return c;\n      }\n    }\n    return undefined;\n  }\n}\n"]}