import { CodeBuilder } from '../schema';
import { buildSchema } from './schema';
import { CalendarInternalsImpl } from './calendars';
import { DateFieldInternalsImpl } from './datefields';
import { GeneralInternalsImpl } from './general';
import { NumberInternalsImpl } from './numbers';
import { UnitsInternalImpl } from './units';
import { checksumIndices } from '../resource/checksum';
/**
 * @internal
 */
var InternalsImpl = /** @class */ (function () {
    function InternalsImpl(config, version, debug, skipChecksum, patternCacheSize) {
        if (debug === void 0) { debug = false; }
        if (skipChecksum === void 0) { skipChecksum = false; }
        if (patternCacheSize === void 0) { patternCacheSize = 50; }
        // TODO: may move this up depending on how integration evolves
        this.config = config;
        var code = new CodeBuilder(config);
        var origin = code.origin();
        this.indices = origin.indices;
        this.schema = buildSchema(origin, debug);
        this.checksum = skipChecksum ? '' : checksumIndices(version, origin.indices);
        this.calendars = new CalendarInternalsImpl(this, patternCacheSize);
        this.dateFields = new DateFieldInternalsImpl(this);
        this.general = new GeneralInternalsImpl(this, patternCacheSize);
        this.numbers = new NumberInternalsImpl(this, patternCacheSize);
        this.units = new UnitsInternalImpl(this);
    }
    return InternalsImpl;
}());
export { InternalsImpl };
//# sourceMappingURL=init.js.map