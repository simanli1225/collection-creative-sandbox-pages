{"version":3,"file":"numbers.js","sourceRoot":"","sources":["../../src/common/numbers.ts"],"names":[],"mappings":"","sourcesContent":["import { ContextType, NumberSystemCategory, NumberSystemName } from '@phensley/cldr-types';\nimport { RoundingModeType } from '@phensley/decimal';\n\n/**\n * @public\n */\nexport type NumberSystemType = NumberSystemCategory | NumberSystemName;\n\n/**\n * @public\n */\nexport type NumberFormatErrorType = 'nan' | 'infinity';\n\n/**\n * @public\n */\nexport interface NumberFormatOptions {\n  nu?: NumberSystemType;\n  round?: RoundingModeType;\n  group?: boolean;\n  minimumIntegerDigits?: number;\n  maximumFractionDigits?: number;\n  minimumFractionDigits?: number;\n  maximumSignificantDigits?: number;\n  minimumSignificantDigits?: number;\n\n  /**\n   * Values whose fraction part is all zeros will format as a whole number,\n   * e.g. '10.00' formats as '$10'\n   */\n  trimZeroFractions?: boolean;\n}\n\n/**\n * @public\n */\nexport type NumberFormatStyleType = 'decimal' | 'short' | 'long' | 'scientific';\n\n/**\n * @public\n */\nexport type DecimalFormatStyleType =\n  | NumberFormatStyleType\n  | 'percent'\n  | 'percent-scaled'\n  | 'permille'\n  | 'permille-scaled';\n\n/**\n * @public\n */\nexport type CurrencyFormatStyleType = 'symbol' | 'accounting' | 'code' | 'name' | 'short';\n\n/**\n * @public\n */\nexport type CurrencySymbolWidthType = 'default' | 'narrow';\n\n/**\n * @public\n */\nexport interface DecimalFormatOptions extends NumberFormatOptions {\n  divisor?: number;\n  negativeZero?: boolean;\n  style?: DecimalFormatStyleType;\n  errors?: NumberFormatErrorType[];\n}\n\n/**\n * @public\n */\nexport interface DecimalAdjustOptions {\n  round?: RoundingModeType;\n  minimumIntegerDigits?: number;\n  maximumFractionDigits?: number;\n  minimumFractionDigits?: number;\n  maximumSignificantDigits?: number;\n  minimumSignificantDigits?: number;\n}\n\n/**\n * @public\n */\nexport interface CurrencyFormatOptions extends NumberFormatOptions {\n  divisor?: number;\n  cash?: boolean;\n  style?: CurrencyFormatStyleType;\n  symbolWidth?: CurrencySymbolWidthType;\n}\n\n/**\n * @public\n */\nexport interface RuleBasedFormatOptions {\n  rule?: string;\n  context?: ContextType;\n  round?: RoundingModeType;\n  minimumIntegerDigits?: number;\n  maximumFractionDigits?: number;\n  minimumFractionDigits?: number;\n  maximumSignificantDigits?: number;\n  minimumSignificantDigits?: number;\n}\n\n/**\n * Information on rounding and number of decimal digits for a given currency.\n *\n * @public\n */\nexport interface CurrencyFractions {\n  digits: number;\n  rounding: number;\n  cashDigits: number;\n  cashRounding: number;\n}\n"]}