import { Checksum } from '@phensley/cldr-utils';
/**
 * Compute a checksum on a KeyIndexMap used to configure the
 * schema. This lets us quickly confirm that the resource pack
 * was generated from the config at runtime
 *
 * @internal
 */
export var checksumIndices = function (version, map) {
    var c = new Checksum();
    // Checksum will ignore the patch level of the version, indicating that packs from any
    // patch level will work together.
    var v = version.split('.').slice(0, 2).join('.');
    c.update(v);
    // Visit map keys in sorted order
    var keys = Object.keys(map).sort();
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var key = keys_1[_i];
        c.update(key);
        // Mapped values must be visited in their existing order.
        for (var _a = 0, _b = map[key].keys; _a < _b.length; _a++) {
            var val = _b[_a];
            c.update(val);
        }
    }
    return c.get().toString(16);
};
//# sourceMappingURL=checksum.js.map