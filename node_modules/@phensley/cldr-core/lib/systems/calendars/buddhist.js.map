{"version":3,"file":"buddhist.js","sourceRoot":"","sources":["../../../src/systems/calendars/buddhist.ts"],"names":[],"mappings":";;;;AACA,yCAA4C;AAK5C,IAAM,KAAK,GAAgC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;AAEnH;;;;;;GAMG;AACH;IAAkC,wCAAa;IAC7C,sBAAsB,QAAgB,EAAE,OAAe;QACrD,OAAA,MAAK,YAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,SAAC;IACvC,CAAC;IAED,0BAAG,GAAH,UAAI,MAAmC;QACrC,OAAO,IAAI,CAAC,IAAI,uCAAM,IAAI,CAAC,MAAM,EAAE,GAAK,MAAM,EAAG,CAAC;IACpD,CAAC;IAED,0BAAG,GAAH,UAAI,MAA2B;QACvB,IAAA,KAAW,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAA3B,EAAE,QAAA,EAAE,EAAE,QAAqB,CAAC;QACnC,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,+BAAQ,GAAR,UAAS,MAAc;QACrB,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC;IACjE,CAAC;IAED,+BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAEM,uBAAU,GAAjB,UAAkB,MAAmC,EAAE,QAAgB,EAAE,OAAe;QACtF,OAAO,IAAI,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,IAAI,uCAAM,KAAK,GAAK,MAAM,EAAmB,CAAC;IAC3F,CAAC;IAEM,0BAAa,GAApB,UAAqB,KAAa,EAAE,MAAc,EAAE,QAAgB,EAAE,OAAe;QACnF,OAAO,IAAI,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,iBAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC9E,CAAC;IAES,2BAAI,GAAd;QACE,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzD,CAAC;IAES,wCAAiB,GAA3B,UAA4B,KAAa,EAAE,MAAc;QACvD,gBAAK,CAAC,iBAAiB,YAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;IACd,CAAC;IAES,iCAAU,GAApB,UAAqB,EAAU,EAAE,KAAa,EAAE,MAAc;QAC5D,gBAAK,CAAC,UAAU,YAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;IACd,CAAC;IAES,iCAAU,GAApB,UAAqB,CAAW;QAC9B,gBAAK,CAAC,UAAU,YAAC,CAAC,CAAC,CAAC;QACpB,qBAAqB,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IACH,mBAAC;AAAD,CAAC,AAlDD,CAAkC,yBAAa,GAkD9C;AAlDY,oCAAY;AAoDzB,IAAM,qBAAqB,GAAG,UAAC,CAAW;IACxC,CAAC,uBAAe,GAAG,CAAC,CAAC;IACrB,CAAC,wBAAgB,GAAG,CAAC,iCAAyB,kDAAuC,CAAC;AACxF,CAAC,CAAC","sourcesContent":["import { CalendarConstants } from './constants';\nimport { GregorianDate } from './gregorian';\nimport { DateField } from './fields';\nimport { TimePeriod } from './interval';\nimport { CalendarDateFields } from './types';\n\nconst ZEROS: Partial<CalendarDateFields> = { year: 1, month: 1, day: 1, hour: 0, minute: 0, second: 0, millis: 0 };\n\n/**\n * A date in the Buddhist calendar.\n *\n * type: buddhist\n *\n * @public\n */\nexport class BuddhistDate extends GregorianDate {\n  protected constructor(firstDay: number, minDays: number) {\n    super('buddhist', firstDay, minDays);\n  }\n\n  set(fields: Partial<CalendarDateFields>): GregorianDate {\n    return this._set({ ...this.fields(), ...fields });\n  }\n\n  add(fields: Partial<TimePeriod>): BuddhistDate {\n    const [jd, ms] = this._add(fields);\n    return this._new().initFromJD(jd, ms, this.timeZoneId());\n  }\n\n  withZone(zoneId: string): BuddhistDate {\n    return this._new().initFromUnixEpoch(this.unixEpoch(), zoneId);\n  }\n\n  toString(): string {\n    return this._toString('Buddhist');\n  }\n\n  static fromFields(fields: Partial<CalendarDateFields>, firstDay: number, minDays: number): BuddhistDate {\n    return new BuddhistDate(firstDay, minDays)._set({ ...ZEROS, ...fields }) as BuddhistDate;\n  }\n\n  static fromUnixEpoch(epoch: number, zoneId: string, firstDay: number, minDays: number): BuddhistDate {\n    return new BuddhistDate(firstDay, minDays).initFromUnixEpoch(epoch, zoneId);\n  }\n\n  protected _new(): BuddhistDate {\n    return new BuddhistDate(this._firstDay, this._minDays);\n  }\n\n  protected initFromUnixEpoch(epoch: number, zoneId: string): BuddhistDate {\n    super.initFromUnixEpoch(epoch, zoneId);\n    this.initFields(this._fields);\n    return this;\n  }\n\n  protected initFromJD(jd: number, msDay: number, zoneId: string): BuddhistDate {\n    super.initFromJD(jd, msDay, zoneId);\n    this.initFields(this._fields);\n    return this;\n  }\n\n  protected initFields(f: number[]): void {\n    super.initFields(f);\n    computeBuddhistFields(f);\n  }\n}\n\nconst computeBuddhistFields = (f: number[]): void => {\n  f[DateField.ERA] = 0;\n  f[DateField.YEAR] = f[DateField.EXTENDED_YEAR] - CalendarConstants.BUDDHIST_ERA_START;\n};\n"]}