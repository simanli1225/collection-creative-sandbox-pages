export interface ZoneInfo {
    zoneid: string;
    stableid: string;
    abbr: string;
    dst: number;
    offset: number;
    metazoneid: string;
}
export declare const zoneInfoFromUTC: (zoneid: string, utc: number) => ZoneInfo;
export declare const currentMetazone: (id: string) => string | undefined;
/**
 * Map a given timezone identifier to a CLDR stable timezone id.
 * This is lighter-weight than going through `zoneInfoFromUTC`
 * since it doesn't need to decode the zone data.
 */
export declare const getStableTimeZoneId: (zoneid: string) => string;
/**
 * Maps a possible timezone alias to the correct id.
 */
export declare const substituteZoneAlias: (id: string) => string;
/**
 * Hand-built list of extra timezone aliases, for remapping timezone identifiers
 * that currently do not map 1:1 with a CLDR identifier or aliass.
 * reated using backward mapping in tz database v2017b.
 *
 * TODO: revisit to translate tz database aliases automatically and merge with
 * cldr aliases.
 */
export declare const timeZoneAliases: {
    [x: string]: string;
};
