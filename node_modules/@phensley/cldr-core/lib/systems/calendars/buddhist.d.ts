import { GregorianDate } from './gregorian';
import { TimePeriod } from './interval';
import { CalendarDateFields } from './types';
/**
 * A date in the Buddhist calendar.
 *
 * type: buddhist
 *
 * @public
 */
export declare class BuddhistDate extends GregorianDate {
    protected constructor(firstDay: number, minDays: number);
    set(fields: Partial<CalendarDateFields>): GregorianDate;
    add(fields: Partial<TimePeriod>): BuddhistDate;
    withZone(zoneId: string): BuddhistDate;
    toString(): string;
    static fromFields(fields: Partial<CalendarDateFields>, firstDay: number, minDays: number): BuddhistDate;
    static fromUnixEpoch(epoch: number, zoneId: string, firstDay: number, minDays: number): BuddhistDate;
    protected _new(): BuddhistDate;
    protected initFromUnixEpoch(epoch: number, zoneId: string): BuddhistDate;
    protected initFromJD(jd: number, msDay: number, zoneId: string): BuddhistDate;
    protected initFields(f: number[]): void;
}
