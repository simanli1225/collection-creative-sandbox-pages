import { DecimalArg, DecimalFormatter } from '@phensley/decimal';
import { NumberingSystem, NumberSymbols } from '../../common/private';
/**
 * @internal
 */
export interface NumberingSystemParams {
    readonly decimal: string;
}
/**
 * @internal
 */
export declare class DecimalNumberingSystem extends NumberingSystem {
    readonly digits: string[];
    constructor(name: string, digits: string[], symbols: NumberSymbols, minimumGroupingDigits: number, primaryGroupingSize: number, secondaryGroupingSize: number);
    formatString(n: DecimalArg, groupDigits: boolean, minInt: number): string;
    protected _formatDecimal<R>(f: DecimalFormatter<R>, n: DecimalArg, groupDigits: boolean, minInt: number): R;
}
/**
 * Fast formatter for integers, no grouping, etc.
 *
 * @internal
 */
export declare const fastFormatDecimal: (n: string, digits: string[], minInt: number) => string;
/**
 * @internal
 */
export declare const INTERNAL_NUMBERING: DecimalNumberingSystem;
