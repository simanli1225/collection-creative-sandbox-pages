{"version":3,"file":"decimal.js","sourceRoot":"","sources":["../../../src/systems/numbering/decimal.ts"],"names":[],"mappings":"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","sourcesContent":["import { coerceDecimal, Chars, DecimalArg, DecimalFormatter, StringDecimalFormatter } from '@phensley/decimal';\nimport { NumberingSystem, NumberSymbols } from '../../common/private';\n\nconst isInteger = (n: any): boolean => typeof n === 'number' && isFinite(n) && Math.floor(n) === n;\n\n/**\n * @internal\n */\nexport interface NumberingSystemParams {\n  readonly decimal: string;\n}\n\n/**\n * @internal\n */\nexport class DecimalNumberingSystem extends NumberingSystem {\n  constructor(\n    name: string,\n    readonly digits: string[],\n    symbols: NumberSymbols,\n    minimumGroupingDigits: number,\n    primaryGroupingSize: number,\n    secondaryGroupingSize: number,\n  ) {\n    super(name, symbols, minimumGroupingDigits, primaryGroupingSize, secondaryGroupingSize);\n  }\n\n  formatString(n: DecimalArg, groupDigits: boolean, minInt: number): string {\n    if (!groupDigits && isInteger(n)) {\n      return fastFormatDecimal(String(n), this.digits, minInt);\n    }\n    return this._formatDecimal(new StringDecimalFormatter(), n, groupDigits, minInt);\n  }\n\n  // TODO: future merging of internal number formatting code into this module\n\n  protected _formatDecimal<R>(f: DecimalFormatter<R>, n: DecimalArg, groupDigits: boolean, minInt: number): R {\n    const d = coerceDecimal(n);\n    const group = groupDigits ? this.symbols.group : '';\n    d.format(\n      f,\n      this.symbols.decimal || '.',\n      group,\n      minInt,\n      this.minimumGroupingDigits,\n      this.primaryGroupingSize,\n      this.secondaryGroupingSize,\n      true, // zeroScale\n      this.digits,\n    );\n    return f.render();\n  }\n}\n\n/**\n * Fast formatter for integers, no grouping, etc.\n *\n * @internal\n */\nexport const fastFormatDecimal = (n: string, digits: string[], minInt: number): string => {\n  let r = '';\n  const len = n.length;\n  for (let i = 0; i < len; i++) {\n    const c = n.charCodeAt(i);\n    switch (c) {\n      case Chars.DIGIT0:\n      case Chars.DIGIT1:\n      case Chars.DIGIT2:\n      case Chars.DIGIT3:\n      case Chars.DIGIT4:\n      case Chars.DIGIT5:\n      case Chars.DIGIT6:\n      case Chars.DIGIT7:\n      case Chars.DIGIT8:\n      case Chars.DIGIT9:\n        r += digits[c - Chars.DIGIT0];\n        break;\n    }\n  }\n  // Left pad zeros if minimum integer digits > formatted length\n  let diff = minInt - r.length;\n  if (diff > 0) {\n    let p = '';\n    while (diff-- > 0) {\n      p += digits[0];\n    }\n    return p + r;\n  }\n  return r;\n};\n\nconst INTERNAL_SYMBOLS: NumberSymbols = {\n  approximatelySign: '~',\n  currencyDecimal: '.',\n  currencyGroup: ',',\n  decimal: '.',\n  exponential: 'E',\n  group: ',',\n  infinity: '∞',\n  list: ';',\n  minusSign: '-',\n  nan: 'NaN',\n  perMille: '‰',\n  percentSign: '%',\n  plusSign: '+',\n  superscriptingExponent: '×',\n  timeSeparator: ':',\n};\n\n/**\n * @internal\n */\nexport const INTERNAL_NUMBERING = new DecimalNumberingSystem(\n  'internal',\n  '0123456789'.split(''),\n  INTERNAL_SYMBOLS,\n  1,\n  3,\n  3,\n);\n"]}