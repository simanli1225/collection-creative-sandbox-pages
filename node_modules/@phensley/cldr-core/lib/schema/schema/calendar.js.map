{"version":3,"file":"calendar.js","sourceRoot":"","sources":["../../../src/schema/schema/calendar.ts"],"names":[],"mappings":";;;AAUA,gDAA+C;AAE/C;;;GAGG;AACH,IAAM,UAAU,GAAG,UAAC,KAAa,EAAE,GAAW;IAC5C,IAAM,CAAC,GAAa,EAAE,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAClC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;IACD,OAAO,IAAI,2BAAY,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC;AAEF;;GAEG;AACU,QAAA,gBAAgB,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAEjD;;GAEG;AACU,QAAA,iBAAiB,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAElD;;GAEG;AACU,QAAA,gBAAgB,GAAG,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAEnD;;GAEG;AACU,QAAA,eAAe,GAAG,wBAAgB,CAAC;AAEhD;;GAEG;AACU,QAAA,oBAAoB,GAAG,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAEtD;;GAEG;AACU,QAAA,0BAA0B,GAA+B,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAE1G;;GAEG;AACU,QAAA,eAAe,GAAoB;IAC9C,MAAM;IACN,UAAU;IACV,IAAI;IACJ,IAAI;IACJ,UAAU;IACV,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,UAAU;IACV,UAAU;IACV,QAAQ;IACR,QAAQ;CACT,CAAC;AAEF;;GAEG;AACU,QAAA,cAAc,GAAmB,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AAE1E;;GAEG;AACU,QAAA,gBAAgB,GAAqB,CAAC,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAE7F;;GAEG;AACU,QAAA,iBAAiB,GAAsB,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAExF;;GAEG;AACU,QAAA,aAAa,GAAkB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAEjE;;GAEG;AACU,QAAA,aAAa,GAAkB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC","sourcesContent":["import {\n  DateTimePatternFieldType,\n  DayPeriodType,\n  EraWidthType,\n  FieldWidthType,\n  FormatWidthType,\n  KeyIndex,\n  QuarterType,\n  WeekdayType,\n} from '@phensley/cldr-types';\nimport { KeyIndexImpl } from '../instructions';\n\n/**\n * Generate a key index containing numeric keys from start to end\n * inclusive.\n */\nconst rangeindex = (start: number, end: number): KeyIndex<string> => {\n  const r: string[] = [];\n  for (let i = start; i <= end; i++) {\n    r.push(String(i));\n  }\n  return new KeyIndexImpl(r);\n};\n\n/**\n * @public\n */\nexport const BuddhistEraIndex = rangeindex(0, 0);\n\n/**\n * @public\n */\nexport const GregorianEraIndex = rangeindex(0, 1);\n\n/**\n * @public\n */\nexport const JapaneseEraIndex = rangeindex(0, 236);\n\n/**\n * @public\n */\nexport const PersianEraIndex = BuddhistEraIndex;\n\n/**\n * @public\n */\nexport const GregorianMonthsIndex = rangeindex(1, 12);\n\n/**\n * @public\n */\nexport const DateTimePatternFieldValues: DateTimePatternFieldType[] = ['y', 'M', 'd', 'a', 'H', 'm', 's'];\n\n/**\n * @public\n */\nexport const DayPeriodValues: DayPeriodType[] = [\n  'noon',\n  'midnight',\n  'am',\n  'pm',\n  'morning1',\n  'morning2',\n  'afternoon1',\n  'afternoon2',\n  'evening1',\n  'evening2',\n  'night1',\n  'night2',\n];\n\n/**\n * @public\n */\nexport const EraWidthValues: EraWidthType[] = ['names', 'abbr', 'narrow'];\n\n/**\n * @public\n */\nexport const FieldWidthValues: FieldWidthType[] = ['abbreviated', 'narrow', 'short', 'wide'];\n\n/**\n * @public\n */\nexport const FormatWidthValues: FormatWidthType[] = ['short', 'medium', 'long', 'full'];\n\n/**\n * @public\n */\nexport const QuarterValues: QuarterType[] = ['1', '2', '3', '4'];\n\n/**\n * @public\n */\nexport const WeekdayValues: WeekdayType[] = ['1', '2', '3', '4', '5', '6', '7'];\n"]}