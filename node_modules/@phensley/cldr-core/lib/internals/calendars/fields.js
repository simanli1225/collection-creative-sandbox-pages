"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFieldType = exports.FIELD_INDEX = exports.buildFieldIndex = exports.FIELD_TYPES = exports.MISSING_FIELD = exports.EXTRA_FIELD = exports.skeletonFields = void 0;
var skeletonFields = function () { return [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; };
exports.skeletonFields = skeletonFields;
// Use single letter variables in FIELD_TYPES for compactness
var D = 16 /* C.DELTA */;
var N = 256 /* C.NUMERIC */;
// const E = C.NONE;
var R = -257 /* C.NARROW */;
var S = -258 /* C.SHORTER */;
var T = -259 /* C.SHORT */;
var L = -260 /* C.LONG */;
exports.EXTRA_FIELD = 65536 /* C.EXTRA_FIELD */;
exports.MISSING_FIELD = 4096 /* C.MISSING_FIELD */;
exports.FIELD_TYPES = [
    ['G', 0 /* Field.ERA */, /* SHORT */ T, 1, 3],
    ['G', 0 /* Field.ERA */, /* LONG */ L, 4, 4],
    ['G', 0 /* Field.ERA */, /* NARROW */ R, 5, 5],
    ['y', 1 /* Field.YEAR */, /* NUMERIC */ N, 1, 20],
    ['Y', 1 /* Field.YEAR */, /* NUMERIC */ N + /* DELTA */ D, 1, 20],
    ['u', 1 /* Field.YEAR */, /* NUMERIC */ N + 2 * /* DELTA */ D, 1, 20],
    ['r', 1 /* Field.YEAR */, /* NUMERIC */ N + 3 * /* DELTA */ D, 1, 20],
    ['U', 1 /* Field.YEAR */, /* SHORT */ T, 1, 3],
    ['U', 1 /* Field.YEAR */, /* LONG */ L, 4, 4],
    ['U', 1 /* Field.YEAR */, /* NARROW */ R, 5, 5],
    ['Q', 2 /* Field.QUARTER */, /* NUMERIC */ N, 1, 2],
    ['Q', 2 /* Field.QUARTER */, /* SHORT */ T, 3, 3],
    ['Q', 2 /* Field.QUARTER */, /* LONG */ L, 4, 4],
    ['Q', 2 /* Field.QUARTER */, /* NARROW */ R, 5, 5],
    ['q', 2 /* Field.QUARTER */, /* NUMERIC */ N + /* DELTA */ D, 1, 2],
    ['q', 2 /* Field.QUARTER */, /* SHORT */ T - /* DELTA */ D, 3, 3],
    ['q', 2 /* Field.QUARTER */, /* LONG */ L - /* DELTA */ D, 4, 4],
    ['q', 2 /* Field.QUARTER */, /* NARROW */ R - /* DELTA */ D, 5, 5],
    ['M', 3 /* Field.MONTH */, /* NUMERIC */ N, 1, 2],
    ['M', 3 /* Field.MONTH */, /* SHORT */ T, 3, 3],
    ['M', 3 /* Field.MONTH */, /* LONG */ L, 4, 4],
    ['M', 3 /* Field.MONTH */, /* NARROW */ R, 5, 5],
    ['L', 3 /* Field.MONTH */, /* NUMERIC */ N + /* DELTA */ D, 1, 2],
    ['L', 3 /* Field.MONTH */, /* SHORT */ T - /* DELTA */ D, 3, 3],
    ['L', 3 /* Field.MONTH */, /* LONG */ L - /* DELTA */ D, 4, 4],
    ['L', 3 /* Field.MONTH */, /* NARROW */ R - /* DELTA */ D, 5, 5],
    ['l', 3 /* Field.MONTH */, /* NUMERIC */ N + /* DELTA */ D, 1, 1],
    ['w', 4 /* Field.WEEK_OF_YEAR */, /* NUMERIC */ N, 1, 2],
    ['W', 5 /* Field.WEEK_OF_MONTH */, /* NUMERIC */ N, 1, 1],
    ['E', 6 /* Field.WEEKDAY */, /* SHORT */ T, 1, 3],
    ['E', 6 /* Field.WEEKDAY */, /* LONG */ L, 4, 4],
    ['E', 6 /* Field.WEEKDAY */, /* NARROW */ R, 5, 5],
    ['E', 6 /* Field.WEEKDAY */, /* SHORTER */ S, 6, 6],
    ['c', 6 /* Field.WEEKDAY */, /* NUMERIC */ N + 2 * /* DELTA */ D, 1, 2],
    ['c', 6 /* Field.WEEKDAY */, /* SHORT */ T - 2 * /* DELTA */ D, 3, 3],
    ['c', 6 /* Field.WEEKDAY */, /* LONG */ L - 2 * /* DELTA */ D, 4, 4],
    ['c', 6 /* Field.WEEKDAY */, /* NARROW */ R - 2 * /* DELTA */ D, 5, 5],
    ['c', 6 /* Field.WEEKDAY */, /* SHORTER */ S - 2 * /* DELTA */ D, 6, 6],
    ['e', 6 /* Field.WEEKDAY */, /* NUMERIC */ N + /* DELTA */ D, 1, 2],
    ['e', 6 /* Field.WEEKDAY */, /* SHORT */ T - /* DELTA */ D, 3, 3],
    ['e', 6 /* Field.WEEKDAY */, /* LONG */ L - /* DELTA */ D, 4, 4],
    ['e', 6 /* Field.WEEKDAY */, /* NARROW */ R - /* DELTA */ D, 5, 5],
    ['e', 6 /* Field.WEEKDAY */, /* SHORTER */ S - /* DELTA */ D, 6, 6],
    ['d', 7 /* Field.DAY */, /* NUMERIC */ N, 1, 2],
    ['g', 7 /* Field.DAY */, /* NUMERIC */ N + /* DELTA */ D, 1, 20],
    ['D', 8 /* Field.DAY_OF_YEAR */, /* NUMERIC */ N, 1, 3],
    ['F', 9 /* Field.DAY_OF_WEEK_IN_MONTH */, /* NUMERIC */ N, 1, 1],
    ['a', 10 /* Field.DAYPERIOD */, /* SHORT */ T, 1, 3],
    ['a', 10 /* Field.DAYPERIOD */, /* LONG */ L, 4, 4],
    ['a', 10 /* Field.DAYPERIOD */, /* NARROW */ R, 5, 5],
    ['b', 10 /* Field.DAYPERIOD */, /* SHORT */ T - /* DELTA */ D, 1, 3],
    ['b', 10 /* Field.DAYPERIOD */, /* LONG */ L - /* DELTA */ D, 4, 4],
    ['b', 10 /* Field.DAYPERIOD */, /* NARROW */ R - /* DELTA */ D, 5, 5],
    ['B', 10 /* Field.DAYPERIOD */, /* SHORT */ T - 3 * /* DELTA */ D, 1, 3],
    ['B', 10 /* Field.DAYPERIOD */, /* LONG */ L - 3 * /* DELTA */ D, 4, 4],
    ['B', 10 /* Field.DAYPERIOD */, /* NARROW */ R - 3 * /* DELTA */ D, 5, 5],
    ['H', 11 /* Field.HOUR */, /* NUMERIC */ N + 10 * /* DELTA */ D, 1, 2], // 24 hour
    ['k', 11 /* Field.HOUR */, /* NUMERIC */ N + 11 * /* DELTA */ D, 1, 2],
    ['h', 11 /* Field.HOUR */, /* NUMERIC */ N, 1, 2], // 12 hour
    ['K', 11 /* Field.HOUR */, /* NUMERIC */ N + /* DELTA */ D, 1, 2],
    ['m', 12 /* Field.MINUTE */, /* NUMERIC */ N, 1, 2],
    ['s', 13 /* Field.SECOND */, /* NUMERIC */ N, 1, 2],
    ['A', 13 /* Field.SECOND */, /* NUMERIC */ N + /* DELTA */ D, 1, 1000],
    ['S', 14 /* Field.FRACTIONAL_SECOND */, /* NUMERIC */ N, 1, 1000],
    ['v', 15 /* Field.ZONE */, /* SHORT */ T - 2 * /* DELTA */ D, 1, 1],
    ['v', 15 /* Field.ZONE */, /* LONG */ L - 2 * /* DELTA */ D, 4, 4],
    ['z', 15 /* Field.ZONE */, /* SHORT */ T, 1, 3],
    ['z', 15 /* Field.ZONE */, /* LONG */ L, 4, 4],
    ['Z', 15 /* Field.ZONE */, /* NARROW */ R - /* DELTA */ D, 1, 3],
    ['Z', 15 /* Field.ZONE */, /* LONG */ L - /* DELTA */ D, 4, 4],
    ['Z', 15 /* Field.ZONE */, /* SHORT */ T - /* DELTA */ D, 5, 5],
    ['O', 15 /* Field.ZONE */, /* SHORT */ T - /* DELTA */ D, 1, 1],
    ['O', 15 /* Field.ZONE */, /* LONG */ L - /* DELTA */ D, 4, 4],
    ['V', 15 /* Field.ZONE */, /* SHORT */ T - /* DELTA */ D, 1, 1],
    ['V', 15 /* Field.ZONE */, /* LONG */ L - /* DELTA */ D, 2, 2],
    ['V', 15 /* Field.ZONE */, /* LONG */ L - 1 - /* DELTA */ D, 3, 3],
    ['V', 15 /* Field.ZONE */, /* LONG */ L - 2 - /* DELTA */ D, 4, 4],
    ['X', 15 /* Field.ZONE */, /* NARROW */ R - /* DELTA */ D, 1, 1],
    ['X', 15 /* Field.ZONE */, /* SHORT */ T - /* DELTA */ D, 2, 2],
    ['X', 15 /* Field.ZONE */, /* LONG */ L - /* DELTA */ D, 4, 4],
    ['x', 15 /* Field.ZONE */, /* NARROW */ R - /* DELTA */ D, 1, 1],
    ['x', 15 /* Field.ZONE */, /* SHORT */ T - /* DELTA */ D, 2, 2],
    ['x', 15 /* Field.ZONE */, /* LONG */ L - /* DELTA */ D, 4, 4],
];
/**
 * Faster lookup for field canonical indices.
 */
var buildFieldIndex = function () {
    var res = new Map();
    exports.FIELD_TYPES.forEach(function (t, i) {
        var entry = res.get(t[0]) || [];
        entry.push(i);
        res.set(t[0], entry);
    });
    return res;
};
exports.buildFieldIndex = buildFieldIndex;
exports.FIELD_INDEX = (0, exports.buildFieldIndex)();
var getFieldType = function (field, width) {
    var indices = exports.FIELD_INDEX.get(field);
    if (indices === undefined) {
        return;
    }
    var row;
    var best = -1;
    for (var _i = 0, indices_1 = indices; _i < indices_1.length; _i++) {
        var i = indices_1[_i];
        best = i;
        row = exports.FIELD_TYPES[i];
        if (row[3] > width || row[4] < width) {
            continue;
        }
        return row;
    }
    return exports.FIELD_TYPES[best];
};
exports.getFieldType = getFieldType;
//# sourceMappingURL=fields.js.map