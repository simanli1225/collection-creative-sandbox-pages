{"version":3,"file":"cldr.js","sourceRoot":"","sources":["../src/cldr.ts"],"names":[],"mappings":"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","sourcesContent":["import { Schema } from '@phensley/cldr-types';\nimport { SchemaConfig } from './schema';\n\nimport { LRU } from '@phensley/cldr-utils';\n\nimport {\n  Calendars,\n  CalendarsImpl,\n  General,\n  GeneralImpl,\n  Numbers,\n  NumbersImpl,\n  PrivateApiImpl,\n  Units,\n  UnitsImpl,\n} from './api';\n\nimport { Internals, InternalsImpl } from './internals';\n\nimport { availableLocales } from './locale';\n\nimport { parseLanguageTag, LanguageTag } from '@phensley/language-tag';\n\nimport { LanguageResolver, Locale } from '@phensley/locale';\n\nimport { Bundle, Pack } from './resource';\n\nimport { VERSION } from './utils/version';\n\nconst enum Messages {\n  CHECKSUM = 'Checksum mismatch on resource pack! The schema config used to ' +\n    'generate the resource pack must be identical to the one used at runtime.',\n  LOCALE_UNDEFINED = 'The \"locale\" argument is undefined',\n  NO_ASYNC_LOADER = 'A Promise-based resource loader is not defined',\n  NO_SYNC_LOADER = 'A synchronous resource loader is not defined',\n}\n\n/**\n * Interface exporting all functionality for a given locale.\n *\n * @public\n */\nexport interface CLDR {\n  /**\n   * Calendar functions.\n   */\n  readonly Calendars: Calendars;\n\n  /**\n   * General functions.\n   */\n  readonly General: General;\n\n  /**\n   * Number and currency functions.\n   */\n  readonly Numbers: Numbers;\n\n  /**\n   * Unit quantity functions.\n   */\n  readonly Units: Units;\n\n  /**\n   * UNDOCUMENTED AND EXPERIMENTAL\n   *\n   * Provides access to the low-level schema for accessing CLDR fields.\n   *\n   * Currently undocumented. In the future an internal api can be\n   * exposed allowing access to low-level functions of the library.\n   *\n   * @internal\n   */\n  readonly Schema: Schema;\n\n  /**\n   * UNDOCUMENTED AND EXPERIMENTAL\n   *\n   * Provides access to the low-level library internals.\n   *\n   * @internal\n   */\n  readonly Internals: Internals;\n}\n\n/**\n * Implements CLDR\n *\n * @public\n */\nclass CLDRImpl implements CLDR {\n  private _calendars?: Calendars;\n  private _general?: General;\n  private _numbers?: Numbers;\n  private _privateApi?: PrivateApiImpl;\n  private _units?: Units;\n\n  constructor(\n    private readonly locale: Locale,\n    private readonly bundle: Bundle,\n    private readonly internals: Internals,\n  ) {}\n\n  /**\n   * Calendar functions.\n   */\n  get Calendars(): Calendars {\n    if (this._calendars === undefined) {\n      this._calendars = new CalendarsImpl(this.bundle, this.internals, this.privateApi);\n    }\n    return this._calendars;\n  }\n\n  /**\n   * General functions.\n   */\n  get General(): General {\n    if (this._general === undefined) {\n      this._general = new GeneralImpl(this.bundle, this.locale, this.internals, this.privateApi);\n    }\n    return this._general;\n  }\n\n  /**\n   * Number and currency functions.\n   */\n  get Numbers(): Numbers {\n    if (this._numbers === undefined) {\n      this._numbers = new NumbersImpl(this.bundle, this.internals.numbers, this.internals.general, this.privateApi);\n    }\n    return this._numbers;\n  }\n\n  /**\n   * Unit quantity functions.\n   */\n  get Units(): Units {\n    if (this._units === undefined) {\n      this._units = new UnitsImpl(this.bundle, this.internals, this.privateApi);\n    }\n    return this._units;\n  }\n\n  /**\n   * UNDOCUMENTED AND EXPERIMENTAL\n   *\n   * Provides access to the low-level schema for accessing CLDR fields.\n   *\n   * Currently undocumented. In the future an internal api can be\n   * exposed allowing access to low-level functions of the library.\n   *\n   * @internal\n   */\n  get Schema(): Schema {\n    return this.internals.schema;\n  }\n\n  /**\n   * UNDOCUMENTED AND EXPERIMENTAL\n   *\n   * Provides access to the low-level library internals.\n   *\n   * @internal\n   */\n  get Internals(): Internals {\n    return this.internals;\n  }\n\n  private get privateApi(): PrivateApiImpl {\n    if (this._privateApi === undefined) {\n      this._privateApi = new PrivateApiImpl(this.bundle, this.internals);\n    }\n    return this._privateApi;\n  }\n}\n\nconst EMPTY_CONFIG: SchemaConfig = {};\n\n/**\n * Options to initialize the library.\n *\n * @public\n */\nexport interface CLDROptions {\n  /**\n   * Log some messages.\n   */\n  debug?: boolean;\n\n  /**\n   * Customizing of the schema.\n   */\n  config?: SchemaConfig;\n\n  /**\n   * Given a language identifier, fetch the resource pack from the\n   * filesystem, webserver, etc, and return the raw decompressed string.\n   */\n  loader?: (language: string) => any;\n\n  asyncLoader?: (language: string) => Promise<any>;\n\n  /**\n   * Number of language-wide resource packs to keep in memory.\n   *\n   * Note: a language pack will only be garbage collected once all instances\n   * using it are garbage collected, so if you hold onto instances the cache\n   * may be ineffective.\n   */\n  packCacheSize?: number;\n\n  /**\n   * Size of internal pattern caches.\n   */\n  patternCacheSize?: number;\n\n  /**\n   * Skip calculting the schema checksums. The checksum detects when the schema\n   * does not match the loaded resource pack and throws an error.\n   */\n  skipChecksum?: boolean;\n}\n\n/**\n * Top-level entry point for the library. It's only purpose at the\n * moment is to construct API instances for a particular locale.\n * All other functionality should be available statically through\n * exported types and functions.\n *\n * @public\n */\nexport class CLDRFramework {\n  protected readonly packCache: LRU<Pack>;\n  protected readonly loader?: (language: string) => any;\n  protected readonly asyncLoader?: (language: string) => Promise<any>;\n  protected readonly internals: Internals;\n  protected readonly _config: SchemaConfig;\n  protected static defaultConfig?: SchemaConfig;\n\n  constructor(protected options: CLDROptions) {\n    this.packCache = new LRU(options.packCacheSize || 2);\n    this.loader = options.loader;\n    this.asyncLoader = options.asyncLoader;\n    this._config = options.config || CLDRFramework.defaultConfig || EMPTY_CONFIG;\n    const patternCacheSize = options.patternCacheSize || 200;\n    this.internals = new InternalsImpl(this._config, VERSION, options.debug, options.skipChecksum, patternCacheSize);\n  }\n\n  /**\n   * Specify a configuration to use as a fallback.\n   */\n  static setDefaultConfig(config: SchemaConfig): void {\n    this.defaultConfig = config;\n  }\n\n  config(): SchemaConfig {\n    return this._config;\n  }\n\n  info(): string {\n    return `packs loaded: ${this.packCache.size()}`;\n  }\n\n  /**\n   * Return the library version.\n   */\n  static version(): string {\n    return VERSION;\n  }\n\n  /**\n   * Return an array of the available locales.\n   */\n  static availableLocales(): Locale[] {\n    return availableLocales();\n  }\n\n  /**\n   * Parse a locale identifier and resolve it. This returns a Locale object\n   * that includes the original id string or tag's compact form, and\n   * a resolved LanguageTag.\n   */\n  static resolveLocale(id: string | LanguageTag): Locale {\n    const _id = typeof id === 'string' ? id : id.compact();\n    const tag = LanguageResolver.resolve(id);\n    return { id: _id, tag };\n  }\n\n  /**\n   * Parses a string into a BCP47 language tag\n   */\n  static parseLanguageTag(s: string): LanguageTag {\n    return parseLanguageTag(s);\n  }\n\n  /**\n   * Synchronously load a bundle and construct an instance of an API for\n   * a given locale. Mainly used when you want to load a language statically\n   * when your application's state store is initialized.\n   */\n  get(locale: Locale | string): CLDR {\n    must(this.loader, Messages.NO_SYNC_LOADER);\n    must(locale, Messages.LOCALE_UNDEFINED);\n    const resolved = typeof locale === 'string' ? CLDRFramework.resolveLocale(locale) : locale;\n    const language = resolved.tag.language();\n\n    let pack = this.packCache.get(language);\n    if (pack === undefined) {\n      const data = this.loader!(language);\n      pack = new Pack(data);\n      this.check(pack);\n      this.packCache.set(language, pack);\n    }\n    return this.build(resolved, pack);\n  }\n\n  /**\n   * Asynchronously load a bundle and construct an instance of an API for\n   * a given locale.\n   */\n  getAsync(locale: Locale | string): Promise<CLDR> {\n    must(this.asyncLoader, Messages.NO_ASYNC_LOADER);\n    must(locale, Messages.LOCALE_UNDEFINED);\n    const resolved = typeof locale === 'string' ? CLDRFramework.resolveLocale(locale) : locale;\n    const language = resolved.tag.language();\n\n    const promise = new Promise<CLDR>((resolve, reject) => {\n      const pack = this.packCache.get(language);\n      if (pack !== undefined) {\n        resolve(this.build(resolved, pack));\n        return;\n      }\n\n      // Resolve via the promise loader\n      this.asyncLoader!(language)\n        .then((raw) => {\n          const _pack = new Pack(raw);\n          this.check(_pack);\n          this.packCache.set(language, _pack);\n          resolve(this.build(resolved, _pack));\n        })\n        .catch(reject);\n    });\n\n    return promise;\n  }\n\n  /**\n   * Builds an API instance.\n   */\n  protected build(locale: Locale, pack: Pack): CLDR {\n    const bundle = pack.get(locale.tag);\n    return new CLDRImpl(locale, bundle, this.internals);\n  }\n\n  /**\n   * Verify the resource pack is compatible with the schema config checksum.\n   */\n  protected check(pack: Pack): void {\n    if (!this.options.skipChecksum && pack.checksum !== this.internals.checksum) {\n      throw new Error(Messages.CHECKSUM);\n    }\n  }\n}\n\nconst must = (arg: any, message: string): void => {\n  if (arg === undefined) {\n    throw new Error(message);\n  }\n};\n"]}