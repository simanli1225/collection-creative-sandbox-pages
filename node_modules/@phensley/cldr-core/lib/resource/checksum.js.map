{"version":3,"file":"checksum.js","sourceRoot":"","sources":["../../src/resource/checksum.ts"],"names":[],"mappings":";;;AACA,mDAAgD;AAEhD;;;;;;GAMG;AACI,IAAM,eAAe,GAAG,UAAC,OAAe,EAAE,GAAgB;IAC/D,IAAM,CAAC,GAAG,IAAI,qBAAQ,EAAE,CAAC;IACzB,sFAAsF;IACtF,kCAAkC;IAClC,IAAM,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnD,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAEZ,iCAAiC;IACjC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IACrC,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE,CAAC;QAApB,IAAM,GAAG,aAAA;QACZ,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAEd,yDAAyD;QACzD,KAAkB,UAAa,EAAb,KAAA,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,EAAb,cAAa,EAAb,IAAa,EAAE,CAAC;YAA7B,IAAM,GAAG,SAAA;YACZ,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAChB,CAAC;IACH,CAAC;IACD,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC9B,CAAC,CAAC;AAlBW,QAAA,eAAe,mBAkB1B","sourcesContent":["import { KeyIndexMap } from '@phensley/cldr-types';\nimport { Checksum } from '@phensley/cldr-utils';\n\n/**\n * Compute a checksum on a KeyIndexMap used to configure the\n * schema. This lets us quickly confirm that the resource pack\n * was generated from the config at runtime\n *\n * @internal\n */\nexport const checksumIndices = (version: string, map: KeyIndexMap): string => {\n  const c = new Checksum();\n  // Checksum will ignore the patch level of the version, indicating that packs from any\n  // patch level will work together.\n  const v = version.split('.').slice(0, 2).join('.');\n  c.update(v);\n\n  // Visit map keys in sorted order\n  const keys = Object.keys(map).sort();\n  for (const key of keys) {\n    c.update(key);\n\n    // Mapped values must be visited in their existing order.\n    for (const val of map[key].keys) {\n      c.update(val);\n    }\n  }\n  return c.get().toString(16);\n};\n"]}