{"version":3,"file":"languagetag.js","sourceRoot":"","sources":["../src/languagetag.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @public\n */\nexport const enum LanguageTagField {\n  LANGUAGE = 0,\n  SCRIPT = 1,\n  REGION = 2,\n  VARIANT = 3,\n}\n\nconst SEP = '-';\n\nconst UNDEFINED_VALUES = ['und', 'Zzzz', 'ZZ', ''];\n\nconst KEYS = [LanguageTagField.LANGUAGE, LanguageTagField.SCRIPT, LanguageTagField.REGION, LanguageTagField.VARIANT];\n\nconst TRANSFORMS: ((s: string) => string)[] = [\n  (s) => s.toLowerCase(),\n  (s) => s[0].toUpperCase() + s.substring(1).toLowerCase(),\n  (s) => s.toUpperCase(),\n  (s) => s.toLowerCase(),\n];\n\n/**\n * Ensure the given field is in canonical form.\n */\nconst canonicalize = (field: number, value?: string): string | undefined => {\n  if (field === LanguageTagField.LANGUAGE && value === 'root') {\n    value = undefined;\n  } else if (value === UNDEFINED_VALUES[field]) {\n    value = undefined;\n  }\n  if (typeof value === 'string' && value.length > 0) {\n    return TRANSFORMS[field](value);\n  }\n  return undefined;\n};\n\n/**\n * IETF BCP 47 language tag with static methods for parsing, adding likely\n * subtags, etc.\n *\n * @public\n */\nexport class LanguageTag {\n  protected core: (undefined | string)[];\n  protected _extensions: { [x: string]: string[] };\n  protected _privateUse: string;\n  protected _extlangs: string[];\n  protected _compact?: string;\n  protected _expanded?: string;\n\n  constructor(\n    language?: string,\n    script?: string,\n    region?: string,\n    variant?: string,\n    extensions?: { [x: string]: string[] },\n    privateUse?: string,\n    extlangs?: string[],\n  ) {\n    this.core = [\n      canonicalize(LanguageTagField.LANGUAGE, language),\n      canonicalize(LanguageTagField.SCRIPT, script),\n      canonicalize(LanguageTagField.REGION, region),\n      canonicalize(LanguageTagField.VARIANT, variant),\n    ];\n    this._extensions = extensions || {};\n    this._privateUse = privateUse || '';\n    this._extlangs = extlangs || [];\n  }\n\n  /**\n   * Language subtag.\n   */\n  language(): string {\n    return this.core[LanguageTagField.LANGUAGE] || UNDEFINED_VALUES[LanguageTagField.LANGUAGE];\n  }\n\n  /**\n   * Returns true if the language subtag is defined.\n   */\n  hasLanguage(): boolean {\n    return this.core[LanguageTagField.LANGUAGE] !== undefined;\n  }\n\n  /**\n   * Script subtag.\n   */\n  script(): string {\n    return this.core[LanguageTagField.SCRIPT] || UNDEFINED_VALUES[LanguageTagField.SCRIPT];\n  }\n\n  /**\n   * Returns true if the script subtag is defined.\n   */\n  hasScript(): boolean {\n    return this.core[LanguageTagField.SCRIPT] !== undefined;\n  }\n\n  /**\n   * Region subtag.\n   */\n  region(): string {\n    return this.core[LanguageTagField.REGION] || UNDEFINED_VALUES[LanguageTagField.REGION];\n  }\n\n  /**\n   * Returns true if the region subtag is defined.\n   */\n  hasRegion(): boolean {\n    return this.core[LanguageTagField.REGION] !== undefined;\n  }\n\n  /**\n   * Variant subtag.\n   */\n  variant(): string {\n    return this.core[LanguageTagField.VARIANT] || UNDEFINED_VALUES[LanguageTagField.VARIANT];\n  }\n\n  /**\n   * Return a copy of this language tag's extensions map.\n   */\n  extensions(): { [x: string]: string[] } {\n    const exts = this._extensions;\n    const res: { [x: string]: string[] } = {};\n    Object.keys(exts).forEach((k) => {\n      res[k] = exts[k];\n    });\n    return res;\n  }\n\n  /**\n   * Return a copy of the extensions of the given type. Use 'u' for Unicode\n   * and 't' for Transforms.\n   */\n  extensionSubtags(key: string): string[] {\n    const exts = this._extensions[key];\n    return exts || [];\n  }\n\n  /**\n   * Private use subtag.\n   */\n  privateUse(): string {\n    return this._privateUse;\n  }\n\n  /**\n   * Extended language tags, used for BCP 47 canonicalization.\n   */\n  extlangs(): string[] {\n    return this._extlangs;\n  }\n\n  /**\n   * Return a compact string representation of the language tag. Any undefined\n   * fields will be omitted.\n   */\n  compact(): string {\n    if (!this._compact) {\n      this._compact = this.render(false);\n    }\n    return this._compact;\n  }\n\n  /**\n   * Return an expanded string representation of the language tag. Any undefined\n   * fields will emit their undefined value.\n   */\n  expanded(): string {\n    if (!this._expanded) {\n      this._expanded = this.render(true);\n    }\n    return this._expanded;\n  }\n\n  /**\n   * Return a compact string representation of the language tag. Any undefined\n   * fields will be omitted.\n   */\n  toString(): string {\n    return this.compact();\n  }\n\n  /**\n   * Render a tag in compact or expanded form.\n   */\n  private render(expanded: boolean): string {\n    let buf: string = '';\n    KEYS.forEach((key) => {\n      const force: boolean = key !== LanguageTagField.VARIANT && (key === LanguageTagField.LANGUAGE || expanded);\n      const val: string | undefined = this.core[key];\n      if (val !== undefined || force) {\n        if (buf.length > 0) {\n          buf += SEP;\n        }\n        buf += val ? val : UNDEFINED_VALUES[key];\n      }\n    });\n    const exts = this._extensions;\n    const keys = Object.keys(exts);\n    if (keys.length) {\n      keys.sort().forEach((k) => {\n        const vals = exts[k];\n        if (vals !== undefined && vals.length > 0) {\n          buf += SEP + k + SEP + exts[k].join(SEP);\n        }\n      });\n    }\n    if (this._privateUse.length > 0) {\n      buf += SEP + this._privateUse;\n    }\n    return buf;\n  }\n}\n"]}