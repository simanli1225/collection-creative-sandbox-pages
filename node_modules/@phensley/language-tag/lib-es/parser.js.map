{"version":3,"file":"parser.js","sourceRoot":"","sources":["../src/parser.ts"],"names":[],"mappings":"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","sourcesContent":["import { LanguageTag } from './languagetag';\nimport { replaceRegion, stringToObject } from './util';\nimport * as subtags from './autogen.subtags';\n\n// Subtag separator\nconst SEP = '-';\nconst UNDERSCORE = /_/g;\n\n// ISO 639 language code\nconst LANGUAGE = /^[a-z]{2,8}$/i;\n\n// Selected ISO 639 codes\nconst EXTLANG = /^[a-z]{3}$/i;\n\n// ISO 15924 script code\nconst SCRIPT = /^[a-z]{4}$/i;\n\n// ISO 3166-1 or UN M.49 code\nconst REGION = /^([a-z]{2,3}|\\d{3})$/i;\n\n// Registered variants\nconst VARIANT = /^([a-z\\d]{5,8}|\\d[a-z\\d]{3})$/i;\n\nconst EXTENSION_PREFIX = /^[\\da-wyz]$/i;\nconst EXTENSION_SUBTAG = /^[\\da-z]{2,8}$/i;\nconst PRIVATEUSE_PREFIX = /^x$/i;\nconst PRIVATEUSE_SUBTAG = /^[\\da-z]{1,8}$/i;\n\n// https://www.unicode.org/reports/tr35/tr35-33/tr35.html#Key_And_Type_Definitions_\nconst UNICODE_EXTENSION_KEYS: Set<string> = new Set([\n  'ca', // calendar\n  'co', // collation\n  'cu', // currency\n  'nu', // numbering system\n  'tz', // timezone\n  'va', // common variant type\n]);\n\n// Grandfathered irregular and regular tags from IANA registry.\nlet GRANDFATHERED_TAGS: { [x: string]: string } | undefined;\n\nconst init = () => {\n  GRANDFATHERED_TAGS = {\n    ...stringToObject(subtags.grandfatheredRaw, '|', ':'),\n\n    // Additional fallbacks from ICU\n    'cel-gaulish': 'xtg-x-cel-gaulish',\n    'en-GB-oed': 'en-GB-x-oed',\n    'i-default': 'en-x-i-default',\n    'i-enochian': 'und-x-i-enochian',\n    'i-mingo': 'see-x-i-mingo',\n    'zh-min': 'nan-x-zh-min',\n  };\n};\n\n/**\n * Match the first element of the parts array against the given pattern.\n * Shifts the first element and returns the match, or returns null.\n */\nconst match = (parts: string[], pattern: RegExp): string | undefined => {\n  if (parts.length > 0) {\n    const m = parts[0].match(pattern);\n    if (m !== null) {\n      parts.shift();\n      return m[0];\n    }\n  }\n  return undefined;\n};\n\n/**\n * Parses a string into a series of language tag fields.\n */\nclass LanguageTagParser {\n  private language?: string;\n  private script?: string;\n  private region?: string;\n  private extlangs: string[] = [];\n  private variants: string[] = [];\n  private extensions: { [x: string]: string[] } = {};\n  private privateUse: string = '';\n\n  private str: string;\n  // private errors: string[] = [];\n\n  constructor(str: string) {\n    this.str = str;\n  }\n\n  /**\n   * Parse the string and return a language tag object.\n   */\n  parse(): LanguageTag {\n    if (!GRANDFATHERED_TAGS) {\n      init();\n    }\n    const str = this.str.indexOf('_') === -1 ? this.str : this.str.replace(UNDERSCORE, SEP);\n    const preferred = GRANDFATHERED_TAGS![str.toLowerCase()];\n    const parts = typeof preferred === 'string' ? preferred.split(SEP) : str.split(SEP);\n\n    if (this.parseLanguage(parts)) {\n      if (this.language && this.language.length <= 3) {\n        this.parseExtLangs(parts);\n      }\n      this.parseScript(parts);\n      this.parseRegion(parts);\n      this.parseVariants(parts);\n      this.parseExtensions(parts);\n    }\n    this.parsePrivateUse(parts);\n\n    // If no region was parsed, check if one of the extlangs is actually a valid ISO 3166\n    if (!this.region) {\n      for (let i = 0; i < this.extlangs.length; i++) {\n        const replacement = replaceRegion(this.extlangs[i].toUpperCase());\n        if (replacement) {\n          this.region = replacement;\n          // Ignore the extlangs since we currently don't add them to the LanguageTag.\n          break;\n        }\n      }\n    }\n\n    return new LanguageTag(\n      this.language,\n      this.script,\n      this.region,\n      this.variants.length === 0 ? undefined : this.variants[0],\n      this.extensions,\n      this.privateUse,\n      this.extlangs,\n    );\n  }\n\n  private parseLanguage(parts: string[]): boolean {\n    this.language = match(parts, LANGUAGE);\n    return !!this.language;\n  }\n\n  private parseExtLangs(parts: string[]): boolean {\n    while (parts.length !== 0) {\n      const result = match(parts, EXTLANG);\n      if (!result) {\n        break;\n      }\n      this.extlangs.push(result);\n    }\n    return this.extlangs.length !== 0;\n  }\n\n  private parseScript(parts: string[]): boolean {\n    this.script = match(parts, SCRIPT);\n    return !!this.script;\n  }\n\n  private parseRegion(parts: string[]): boolean {\n    this.region = match(parts, REGION);\n    return !!this.region;\n  }\n\n  private parseVariants(parts: string[]): boolean {\n    while (parts.length > 0) {\n      const result = match(parts, VARIANT);\n      if (!result) {\n        break;\n      }\n      this.variants.push(result);\n    }\n    return this.variants.length !== 0;\n  }\n\n  private parseExtensions(parts: string[]): boolean {\n    let parsed = false;\n    while (parts.length > 0) {\n      const prefix = match(parts, EXTENSION_PREFIX);\n      if (!prefix) {\n        break;\n      }\n\n      const subs: string[] = [];\n      let temp = '';\n      while (parts.length > 0) {\n        const subtag = match(parts, EXTENSION_SUBTAG);\n        if (!subtag) {\n          break;\n        }\n\n        if (!UNICODE_EXTENSION_KEYS.has(subtag)) {\n          temp += temp ? SEP + subtag : subtag;\n          continue;\n        }\n\n        if (temp) {\n          subs.push(temp);\n        }\n        temp = subtag;\n      }\n\n      if (temp) {\n        subs.push(temp);\n      }\n\n      if (subs.length > 0) {\n        parsed = true;\n        subs.sort();\n        let curr = this.extensions[prefix];\n        curr = curr === undefined ? subs : curr.concat(subs);\n        this.extensions[prefix] = curr.sort();\n      }\n    }\n    return parsed;\n  }\n\n  private parsePrivateUse(parts: string[]): boolean {\n    let parsed = false;\n    while (parts.length > 0) {\n      const prefix = match(parts, PRIVATEUSE_PREFIX);\n      if (!prefix) {\n        break;\n      }\n      const subs = [];\n      while (parts.length > 0) {\n        const subtag = match(parts, PRIVATEUSE_SUBTAG);\n        if (!subtag) {\n          break;\n        }\n        subs.push(subtag);\n      }\n\n      if (subs.length > 0) {\n        this.privateUse += `${prefix}${SEP}${subs.join(SEP)}`;\n        parsed = true;\n      }\n    }\n    return parsed;\n  }\n}\n\n/**\n * Low-level parsing of a language tag. No resolution is performed.\n *\n * @public\n */\nexport const parseLanguageTag = (str: string): LanguageTag => new LanguageTagParser(str).parse();\n"]}