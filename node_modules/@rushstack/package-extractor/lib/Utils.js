"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.remapPathForExtractorMetadata = exports.remapSourcePathForTargetFolder = exports.matchesWithStar = void 0;
const node_path_1 = __importDefault(require("node:path"));
const node_core_library_1 = require("@rushstack/node-core-library");
function matchesWithStar(patternWithStar, input) {
    // Map "@types/*" --> "^\@types\/.*$"
    const pattern = '^' +
        patternWithStar
            .split('*')
            .map((x) => node_core_library_1.Text.escapeRegExp(x))
            .join('.*') +
        '$';
    // eslint-disable-next-line @rushstack/security/no-unsafe-regexp
    const regExp = new RegExp(pattern);
    return regExp.test(input);
}
exports.matchesWithStar = matchesWithStar;
/**
 * Maps a file path under the provided {@link IRemapPathForTargetFolder.sourceRootFolder} to the provided
 * {@link IExtractorOptions.targetRootFolder}.
 *
 * Example input: "C:\\MyRepo\\libraries\\my-lib"
 * Example output: "C:\\MyRepo\\common\\deploy\\libraries\\my-lib"
 */
function remapSourcePathForTargetFolder(options) {
    const { sourcePath, sourceRootFolder, targetRootFolder } = options;
    const relativePath = node_path_1.default.relative(sourceRootFolder, sourcePath);
    if (relativePath.startsWith('..')) {
        throw new Error(`Source path "${sourcePath}" is not under "${sourceRootFolder}"`);
    }
    const absolutePathInTargetFolder = node_path_1.default.join(targetRootFolder, relativePath);
    return absolutePathInTargetFolder;
}
exports.remapSourcePathForTargetFolder = remapSourcePathForTargetFolder;
/**
 * Maps a file path under the provided folder path to the expected path format for the extractor metadata.
 *
 * Example input: "C:\\MyRepo\\libraries\\my-lib"
 * Example output: "common/deploy/libraries/my-lib"
 */
function remapPathForExtractorMetadata(folderPath, filePath) {
    const relativePath = node_path_1.default.relative(folderPath, filePath);
    if (relativePath.startsWith('..')) {
        throw new Error(`Path "${filePath}" is not under "${folderPath}"`);
    }
    return node_core_library_1.Path.convertToSlashes(relativePath);
}
exports.remapPathForExtractorMetadata = remapPathForExtractorMetadata;
//# sourceMappingURL=Utils.js.map